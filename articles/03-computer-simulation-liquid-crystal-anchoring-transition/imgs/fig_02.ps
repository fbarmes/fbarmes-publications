%!PS-Adobe-2.0
%%Title: LnT-k.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed May  7 18:23:33 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvectica) findfont 300 scalefont setfont
1.000 UL
LTb
1350 720 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 720 M
[ [(Helvectica) 300.0 0.0 true true (0.0)]
] -100.0 MRshow
1350 1512 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 1512 M
[ [(Helvectica) 300.0 0.0 true true (0.2)]
] -100.0 MRshow
1350 2304 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 2304 M
[ [(Helvectica) 300.0 0.0 true true (0.4)]
] -100.0 MRshow
1350 3096 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 3096 M
[ [(Helvectica) 300.0 0.0 true true (0.6)]
] -100.0 MRshow
1350 3888 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 3888 M
[ [(Helvectica) 300.0 0.0 true true (0.8)]
] -100.0 MRshow
1350 4680 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 4680 M
[ [(Helvectica) 300.0 0.0 true true (1.0)]
] -100.0 MRshow
1350 720 M
0 63 V
0 3897 R
0 -63 V
 stroke
1350 420 M
[ [(Helvectica) 300.0 0.0 true true (0)]
] -100.0 MCshow
2418 720 M
0 63 V
0 3897 R
0 -63 V
 stroke
2418 420 M
[ [(Helvectica) 300.0 0.0 true true (20)]
] -100.0 MCshow
3486 720 M
0 63 V
0 3897 R
0 -63 V
 stroke
3486 420 M
[ [(Helvectica) 300.0 0.0 true true (40)]
] -100.0 MCshow
4554 720 M
0 63 V
0 3897 R
0 -63 V
 stroke
4554 420 M
[ [(Helvectica) 300.0 0.0 true true (60)]
] -100.0 MCshow
5622 720 M
0 63 V
0 3897 R
0 -63 V
 stroke
5622 420 M
[ [(Helvectica) 300.0 0.0 true true (80)]
] -100.0 MCshow
6690 720 M
0 63 V
0 3897 R
0 -63 V
 stroke
6690 420 M
[ [(Helvectica) 300.0 0.0 true true (100)]
] -100.0 MCshow
1.000 UL
LTb
1350 720 M
5340 0 V
0 3960 V
-5340 0 V
0 -3960 V
 stroke
300 2700 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvectica) 300.0 0.0 true true (  )]
] -100.0 MCshow
grestore
4020 150 M
[ [(Helvectica) 300.0 0.0 true true (k)]
] -100.0 MCshow
4.000 UL
LT2
1403 720 M
106 1900 V
106 503 V
106 256 V
105 162 V
106 114 V
106 86 V
106 68 V
105 55 V
106 45 V
106 39 V
105 34 V
106 29 V
106 26 V
106 23 V
105 21 V
106 19 V
106 17 V
106 16 V
105 15 V
106 13 V
106 13 V
106 11 V
105 11 V
106 10 V
106 10 V
105 9 V
106 8 V
106 8 V
106 8 V
105 7 V
106 7 V
106 7 V
106 6 V
105 6 V
106 6 V
106 5 V
105 6 V
106 5 V
106 5 V
106 4 V
105 5 V
106 4 V
106 4 V
106 4 V
105 4 V
106 4 V
106 4 V
106 3 V
105 4 V
106 3 V
1.000 UL
LTb
3210 1608 M
63 0 V
2769 0 R
-63 0 V
 stroke
3030 1608 M
[ [(Helvectica) 300.0 0.0 true true (0.0)]
] -100.0 MRshow
3210 2172 M
63 0 V
2769 0 R
-63 0 V
 stroke
3030 2172 M
[ [(Helvectica) 300.0 0.0 true true (0.2)]
] -100.0 MRshow
3210 2735 M
63 0 V
2769 0 R
-63 0 V
 stroke
3030 2735 M
[ [(Helvectica) 300.0 0.0 true true (0.4)]
] -100.0 MRshow
3210 3299 M
63 0 V
2769 0 R
-63 0 V
 stroke
3030 3299 M
[ [(Helvectica) 300.0 0.0 true true (0.6)]
] -100.0 MRshow
3210 1608 M
0 63 V
0 2051 R
0 -63 V
 stroke
3210 1308 M
[ [(Helvectica) 300.0 0.0 true true (1)]
] -100.0 MCshow
3776 1608 M
0 63 V
0 2051 R
0 -63 V
 stroke
3776 1308 M
[ [(Helvectica) 300.0 0.0 true true (2)]
] -100.0 MCshow
4343 1608 M
0 63 V
0 2051 R
0 -63 V
 stroke
4343 1308 M
[ [(Helvectica) 300.0 0.0 true true (3)]
] -100.0 MCshow
4909 1608 M
0 63 V
0 2051 R
0 -63 V
 stroke
4909 1308 M
[ [(Helvectica) 300.0 0.0 true true (4)]
] -100.0 MCshow
5476 1608 M
0 63 V
0 2051 R
0 -63 V
 stroke
5476 1308 M
[ [(Helvectica) 300.0 0.0 true true (5)]
] -100.0 MCshow
6042 1608 M
0 63 V
0 2051 R
0 -63 V
 stroke
6042 1308 M
[ [(Helvectica) 300.0 0.0 true true (6)]
] -100.0 MCshow
1.000 UL
LTb
3210 1608 M
2832 0 V
0 2114 V
-2832 0 V
0 -2114 V
 stroke
151 2735 M
[ [(Helvectica) 300.0 0.0 true true (k)]
[(Helvectica) 240.0 150.0 true true (T)]
[(Helvectica) 240.0 -90.0 true true (S)]
[(Helvectica) 300.0 0.0 true true (/k)]
] -100.0 MLshow
4343 3102 M
[ [(Helvetica) 200.0 0.0 true true (0.4817)]
] -66.7 MRshow
5476 3440 M
[ [(Helvetica) 200.0 0.0 true true (0.6084)]
] -66.7 MRshow
2.000 UL
LT0
4343 1608 M
0 1358 V
2.000 UL
LT0
3210 2966 M
1133 0 V
2.000 UL
LT0
5476 1608 M
0 1715 V
2.000 UL
LT0
3210 3323 M
2266 0 V
4.000 UL
LT2
3210 1608 M
102 288 V
102 215 V
102 169 V
102 137 V
102 114 V
102 97 V
102 84 V
102 73 V
102 65 V
102 58 V
101 52 V
102 47 V
102 43 V
102 40 V
102 36 V
102 33 V
102 32 V
102 29 V
102 27 V
102 25 V
102 24 V
102 22 V
102 21 V
102 20 V
102 19 V
102 18 V
102 17 V
79 13 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica Helvectica
%%Pages: 1
