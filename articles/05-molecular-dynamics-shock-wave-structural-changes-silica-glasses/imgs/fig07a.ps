%!PS-Adobe-2.0
%%Title: shock_rings.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon May 15 14:14:23 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: 1 0
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {30.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1170 900 M
63 0 V
5457 0 R
-63 0 V
stroke
990 900 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (0)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 1656 M
63 0 V
5457 0 R
-63 0 V
stroke
990 1656 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (10)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 2412 M
63 0 V
5457 0 R
-63 0 V
stroke
990 2412 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (20)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 3168 M
63 0 V
5457 0 R
-63 0 V
stroke
990 3168 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (30)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 3924 M
63 0 V
5457 0 R
-63 0 V
stroke
990 3924 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (40)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 4680 M
63 0 V
5457 0 R
-63 0 V
stroke
990 4680 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (50)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1170 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1672 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1672 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 1)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2174 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2174 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2675 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2675 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 3)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3177 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3177 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3679 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3679 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 5)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4181 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4181 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4683 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4683 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 7)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5185 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5185 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 8)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5686 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5686 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 9)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6188 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6188 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 10)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 11)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1170 900 M
5520 0 V
0 3780 V
-5520 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (P)]
[(Helvetica) 240.0 -90.0 true true 0 (1)]
[(Helvetica) 300.0 0.0 true true 0 (\(n\))]
] -70.0 MCshow
grestore
grestore
LTb
3930 150 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (Ring size n)]
] -100.0 MCshow
grestore
1.000 UP
1.000 UL
LT0
LTb
2790 4467 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (u=5 Km/s)]
] -100.0 MRshow
grestore
LT0
2970 4392 783 150 40 -30 0 PatternFill
LTb
2970 4392 M
783 0 V
0 150 V
-783 0 V
0 -150 V
LT0
2675 900 127 539 40 -30 0 PatternFill
LTb
2675 900 M
0 538 V
126 0 V
0 -538 V
-126 0 V
LT0
3177 900 127 926 40 -30 0 PatternFill
LTb
3177 900 M
0 925 V
126 0 V
0 -925 V
-126 0 V
LT0
3679 900 127 1251 40 -30 0 PatternFill
LTb
3679 900 M
0 1250 V
126 0 V
0 -1250 V
-126 0 V
LT0
4181 900 126 1286 40 -30 0 PatternFill
LTb
4181 900 M
0 1285 V
125 0 V
0 -1285 V
-125 0 V
LT0
4683 900 126 1184 40 -30 0 PatternFill
LTb
4683 900 M
0 1183 V
125 0 V
0 -1183 V
-125 0 V
LT0
5185 900 126 999 40 -30 0 PatternFill
LTb
5185 900 M
0 998 V
125 0 V
0 -998 V
-125 0 V
LT0
5686 900 127 784 40 -30 0 PatternFill
LTb
5686 900 M
0 783 V
126 0 V
0 -783 V
-126 0 V
LT0
6188 900 127 598 40 -30 0 PatternFill
LTb
6188 900 M
0 597 V
126 0 V
0 -597 V
-126 0 V
LT0
1.000 UL
LT1
LTb
2790 4167 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (u=2 Km/s)]
] -100.0 MRshow
grestore
LT1
2970 4092 783 150 BoxFill
LTb
2970 4092 M
783 0 V
0 150 V
-783 0 V
0 -150 V
LT1
2550 900 126 388 BoxFill
LTb
2550 900 M
0 387 V
125 0 V
0 -387 V
-125 0 V
LT1
3052 900 126 890 BoxFill
LTb
3052 900 M
0 889 V
125 0 V
0 -889 V
-125 0 V
LT1
3554 900 126 1538 BoxFill
LTb
3554 900 M
0 1537 V
125 0 V
0 -1537 V
-125 0 V
LT1
4055 900 127 1648 BoxFill
LTb
4055 900 M
0 1647 V
126 0 V
0 -1647 V
-126 0 V
LT1
4557 900 127 1236 BoxFill
LTb
4557 900 M
0 1235 V
126 0 V
0 -1235 V
-126 0 V
LT1
5059 900 127 860 BoxFill
LTb
5059 900 M
0 859 V
126 0 V
0 -859 V
-126 0 V
LT1
5561 900 126 596 BoxFill
LTb
5561 900 M
0 595 V
125 0 V
0 -595 V
-125 0 V
LT1
6063 900 126 412 BoxFill
LTb
6063 900 M
0 411 V
125 0 V
0 -411 V
-125 0 V
LT1
2.000 UP
1.000 UL
LT2
LTb
2790 3867 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (u=0 Km/s)]
] -100.0 MRshow
grestore
LT2
2675 978 CircleF
3177 1397 CircleF
3679 3005 CircleF
4181 3753 CircleF
4683 2294 CircleF
5185 1300 CircleF
5686 1046 CircleF
6188 988 CircleF
3361 3867 CircleF
2.000 UL
LT0
2675 978 M
36 6 V
35 7 V
36 8 V
35 10 V
36 13 V
35 17 V
36 20 V
35 26 V
36 32 V
35 38 V
36 45 V
35 53 V
36 62 V
35 71 V
36 80 V
35 90 V
36 98 V
35 105 V
36 112 V
35 116 V
36 120 V
35 123 V
36 125 V
35 126 V
36 126 V
35 124 V
35 122 V
36 119 V
35 114 V
36 109 V
35 103 V
36 95 V
35 88 V
36 79 V
35 69 V
36 59 V
35 47 V
36 35 V
35 22 V
36 7 V
35 -7 V
36 -24 V
35 -39 V
36 -56 V
35 -71 V
36 -83 V
35 -94 V
36 -104 V
35 -111 V
36 -118 V
35 -121 V
36 -124 V
35 -125 V
35 -124 V
36 -122 V
35 -118 V
36 -111 V
35 -105 V
36 -99 V
35 -92 V
36 -86 V
35 -80 V
36 -75 V
35 -69 V
36 -64 V
35 -59 V
36 -55 V
35 -49 V
36 -46 V
35 -41 V
36 -38 V
35 -33 V
36 -31 V
35 -27 V
36 -24 V
35 -22 V
36 -19 V
35 -17 V
36 -14 V
35 -13 V
36 -11 V
35 -10 V
35 -9 V
36 -7 V
35 -7 V
36 -6 V
35 -6 V
36 -6 V
35 -5 V
36 -4 V
35 -4 V
36 -4 V
35 -4 V
36 -3 V
35 -3 V
36 -3 V
35 -3 V
36 -3 V
35 -3 V
1.000 UL
LTb
1170 900 M
5520 0 V
0 3780 V
-5520 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 2
