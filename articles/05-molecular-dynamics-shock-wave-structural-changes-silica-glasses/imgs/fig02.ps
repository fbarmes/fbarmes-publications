%!PS-Adobe-2.0
%%Title: mkGlass_paper.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon May 15 13:53:42 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: 1 0
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1170 3580 M
63 0 V
5457 0 R
-63 0 V
stroke
990 3580 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 4020 M
63 0 V
5457 0 R
-63 0 V
stroke
990 4020 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 3)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 4460 M
63 0 V
5457 0 R
-63 0 V
stroke
990 4460 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
6690 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
5901 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
5113 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
4324 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
3536 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
2747 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
1959 3360 M
0 63 V
0 1257 R
0 -63 V
1.000 UL
LTb
1.000 UL
LTb
1170 3360 M
5520 0 V
0 1320 V
-5520 0 V
0 -1320 V
LTb
300 4020 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (    )]
] -100.0 MCshow
grestore
grestore
1.000 UP
LTb
1959 4460 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (Si-Si)]
] -100.0 MRshow
grestore
1.000 UL
LT0
2688 3360 M
225 1 R
113 4 V
112 14 V
113 35 V
112 102 V
113 202 V
112 231 V
113 -9 V
112 -223 V
113 -198 V
112 -75 V
113 -12 V
112 15 V
113 24 V
112 31 V
113 37 V
112 33 V
113 32 V
112 25 V
113 22 V
112 11 V
112 8 V
113 -6 V
112 -12 V
113 -19 V
112 -31 V
113 -30 V
112 -31 V
113 -21 V
112 -9 V
113 2 V
112 9 V
113 13 V
112 18 V
65 9 V
1.000 UL
LT0
3251 3361 M
112 22 V
113 190 V
112 591 V
113 317 V
112 -997 V
113 -119 V
112 3 V
113 13 V
112 35 V
113 41 V
112 36 V
113 43 V
112 52 V
113 44 V
112 37 V
113 11 V
112 -4 V
112 12 V
113 2 V
112 -18 V
113 -18 V
112 -35 V
113 -47 V
112 -74 V
113 -25 V
112 2 V
113 24 V
112 11 V
113 18 V
112 23 V
65 9 V
2.000 UP
1.000 UL
LT2
LTb
5367 4467 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (T=4000K)]
] -100.0 MRshow
grestore
LT2
3026 3365 BoxF
3251 3414 BoxF
3476 3718 BoxF
3701 3940 BoxF
3926 3519 BoxF
4151 3432 BoxF
4376 3471 BoxF
4601 3539 BoxF
4826 3604 BoxF
5051 3651 BoxF
5275 3670 BoxF
5500 3652 BoxF
5725 3602 BoxF
5950 3541 BoxF
6175 3511 BoxF
6400 3522 BoxF
6625 3553 BoxF
5938 4467 BoxF
2.000 UP
1.000 UL
LT3
LTb
5367 4167 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (T=300K)]
] -100.0 MRshow
grestore
LT3
3251 3361 Circle
3476 3573 Circle
3701 4481 Circle
3926 3365 Circle
4151 3381 Circle
4376 3457 Circle
4601 3536 Circle
4826 3632 Circle
5051 3680 Circle
5275 3688 Circle
5500 3672 Circle
5725 3619 Circle
5950 3498 Circle
6175 3475 Circle
6400 3510 Circle
6625 3551 Circle
5938 4167 Circle
1.000 UL
LTb
1170 3360 M
5520 0 V
0 1320 V
-5520 0 V
0 -1320 V
1.000 UP
1.000 UL
LTb
1170 2100 M
63 0 V
5457 0 R
-63 0 V
stroke
990 2100 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 2520 M
63 0 V
5457 0 R
-63 0 V
stroke
990 2520 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (10)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 2940 M
63 0 V
5457 0 R
-63 0 V
stroke
990 2940 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (15)]
] -100.0 MRshow
grestore
1.000 UL
LTb
6690 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
5901 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
5113 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
4324 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
3536 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
2747 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
1959 1680 M
0 63 V
0 1617 R
0 -63 V
1.000 UL
LTb
1.000 UL
LTb
1170 1680 M
5520 0 V
0 1680 V
-5520 0 V
0 -1680 V
LTb
300 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (g\(r\))]
] -100.0 MCshow
grestore
grestore
1.000 UP
LTb
1959 2940 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (Si-O)]
] -100.0 MRshow
grestore
1.000 UL
LT0
2126 1680 M
113 29 V
112 373 V
113 282 V
112 -370 V
112 -230 V
113 -61 V
112 -14 V
113 -3 V
112 -1 V
113 2 V
112 3 V
113 7 V
112 9 V
113 12 V
112 16 V
113 19 V
112 22 V
113 21 V
112 18 V
113 8 V
112 -6 V
113 -18 V
112 -21 V
113 -19 V
112 -9 V
113 -4 V
112 -1 V
112 2 V
113 3 V
112 4 V
113 4 V
112 5 V
113 6 V
112 6 V
113 3 V
112 2 V
113 -1 V
112 -4 V
113 -6 V
112 -6 V
65 -2 V
1.000 UL
LT0
2351 1742 M
113 1433 V
2576 1708 L
112 -27 V
113 -1 V
112 0 V
113 0 V
112 0 V
113 1 V
112 0 V
113 4 V
112 8 V
113 12 V
112 15 V
113 24 V
112 34 V
113 33 V
112 23 V
113 16 V
112 0 V
113 -44 V
112 -51 V
113 -13 V
112 -2 V
113 3 V
112 0 V
112 1 V
113 3 V
112 3 V
113 5 V
112 5 V
113 8 V
112 13 V
113 5 V
112 -1 V
113 -1 V
112 -5 V
113 -11 V
112 -12 V
65 -4 V
2.000 UP
1.000 UL
LT2
2239 1709 BoxF
2576 1994 BoxF
2913 1689 BoxF
3251 1687 BoxF
3588 1706 BoxF
3926 1753 BoxF
4263 1814 BoxF
4601 1798 BoxF
4938 1749 BoxF
5275 1746 BoxF
5613 1757 BoxF
5950 1774 BoxF
6288 1778 BoxF
6625 1762 BoxF
2.000 UP
1.000 UL
LT3
2576 1708 Circle
2913 1680 Circle
3251 1681 Circle
3588 1693 Circle
3926 1744 Circle
4263 1834 Circle
4601 1806 Circle
4938 1740 Circle
5275 1744 Circle
5613 1755 Circle
5950 1781 Circle
6288 1784 Circle
6625 1756 Circle
1.000 UL
LTb
1170 1680 M
5520 0 V
0 1680 V
-5520 0 V
0 -1680 V
1.000 UP
1.000 UL
LTb
1170 780 M
63 0 V
5457 0 R
-63 0 V
stroke
990 780 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 1140 M
63 0 V
5457 0 R
-63 0 V
stroke
990 1140 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 3)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1170 1500 M
63 0 V
5457 0 R
-63 0 V
stroke
990 1500 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 5)]
] -100.0 MRshow
grestore
1.000 UL
LTb
6690 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
5901 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
5113 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
4324 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
3536 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
2747 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
1959 600 M
0 63 V
0 1017 R
0 -63 V
1.000 UL
LTb
1.000 UL
LTb
1170 600 M
5520 0 V
0 1080 V
-5520 0 V
0 -1080 V
LTb
300 1140 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (    )]
] -100.0 MCshow
grestore
grestore
1.000 UP
LTb
1959 420 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (1.0)]
] -100.0 MCshow
grestore
LTb
2747 420 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (2.0)]
] -100.0 MCshow
grestore
LTb
3536 420 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (3.0)]
] -100.0 MCshow
grestore
LTb
4324 420 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (4.0)]
] -100.0 MCshow
grestore
LTb
5113 420 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (5.0)]
] -100.0 MCshow
grestore
LTb
1959 1500 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (O-O)]
] -100.0 MRshow
grestore
LTb
5507 276 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (r \(10)]
[(Helvetica) 240.0 150.0 true true 0 (-10)]
[(Helvetica) 300.0 0.0 true true 0 (m\))]
] -130.0 MLshow
grestore
1.000 UL
LT0
2576 600 M
112 1 V
113 12 V
112 55 V
113 144 V
112 185 V
113 84 V
112 -69 V
3476 868 L
3588 761 L
113 -50 V
112 -12 V
113 3 V
112 8 V
113 10 V
112 9 V
113 10 V
112 11 V
113 14 V
112 16 V
113 20 V
112 21 V
113 14 V
112 4 V
112 -7 V
113 -18 V
112 -21 V
113 -18 V
112 -14 V
113 -6 V
112 -1 V
113 1 V
112 3 V
113 4 V
112 6 V
113 5 V
112 8 V
65 4 V
1.000 UL
LT0
2913 600 M
113 32 V
112 416 V
113 525 V
112 -530 V
3476 684 L
112 -46 V
113 15 V
112 20 V
113 22 V
112 17 V
113 14 V
112 13 V
113 8 V
112 8 V
113 7 V
112 12 V
113 16 V
112 36 V
113 45 V
112 26 V
112 -21 V
113 -67 V
112 -50 V
113 -16 V
112 4 V
113 3 V
112 -1 V
113 1 V
112 4 V
113 3 V
112 5 V
113 9 V
112 8 V
65 7 V
2.000 UP
1.000 UL
LT2
2576 600 BoxF
2913 668 BoxF
3251 1081 BoxF
3588 761 BoxF
3926 702 BoxF
4263 729 BoxF
4601 764 BoxF
4938 821 BoxF
5275 832 BoxF
5613 775 BoxF
5950 754 BoxF
6288 762 BoxF
6625 781 BoxF
2.000 UP
1.000 UL
LT3
2913 600 Circle
3251 1573 Circle
3588 638 Circle
3926 695 Circle
4263 739 Circle
4601 762 Circle
4938 826 Circle
5275 876 Circle
5613 743 Circle
5950 749 Circle
6288 757 Circle
6625 779 Circle
1.000 UL
LTb
1170 600 M
5520 0 V
0 1080 V
-5520 0 V
0 -1080 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 5
