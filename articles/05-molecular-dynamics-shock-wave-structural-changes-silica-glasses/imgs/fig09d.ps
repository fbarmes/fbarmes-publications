%!PS-Adobe-2.0
%%Title: cmp_paper2.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon May 15 14:21:21 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: 1 0
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {30.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 6 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1410 900 M
63 0 V
5217 0 R
-63 0 V
stroke
1230 900 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1410 2160 M
63 0 V
5217 0 R
-63 0 V
stroke
1230 2160 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.02)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1410 3420 M
63 0 V
5217 0 R
-63 0 V
stroke
1230 3420 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.04)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1410 4680 M
63 0 V
5217 0 R
-63 0 V
stroke
1230 4680 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.06)]
] -100.0 MRshow
grestore
1.000 UL
LTb
6690 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6690 600 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5370 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5370 600 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (3p/4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4050 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4050 600 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p/2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2730 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2730 600 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p/4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1410 900 M
0 63 V
0 3717 R
0 -63 V
stroke
1410 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (0)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1410 900 M
5280 0 V
0 3780 V
-5280 0 V
0 -3780 V
LTb
4050 150 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (q)]
] -100.0 MCshow
grestore
1.000 UP
LTb
530 2475 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (P\()]
[(Symbol) 300.0 0.0 true true 0 (q)]
[(Helvetica) 300.0 0.0 true true 0 (\))]
] -100.0 MLshow
grestore
grestore
LTb
4343 3105 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (SiOSi)]
] -100.0 MLshow
grestore
LTb
3463 3231 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (OSiO)]
] -100.0 MLshow
grestore
LTb
2583 2475 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (SiSiSi)]
] -100.0 MLshow
grestore
LTb
1703 4365 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (r)]
[(Helvetica) 300.0 0.0 true true 0 (= 4.8 g/cm)]
[(Helvetica) 240.0 150.0 true true 0 (3)]
] -130.0 MLshow
grestore
LTb
1703 3924 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (v)]
[(Helvetica) 240.0 -90.0 true true 0 (p)]
[(Helvetica) 300.0 0.0 true true 0 (= 5 Km/s)]
] -70.0 MLshow
grestore
2.000 UL
LT0
1436 900 M
106 0 R
51 0 V
52 0 V
2 0 V
106 0 R
49 0 V
53 0 V
3 0 V
105 0 R
48 0 V
53 0 V
4 0 V
106 0 R
46 0 V
53 0 V
6 0 V
105 0 R
45 0 V
53 0 V
7 0 V
104 0 R
46 0 V
52 0 V
52 1 V
52 0 V
53 0 V
52 1 V
52 0 V
52 0 V
53 2 V
52 2 V
52 2 V
52 2 V
53 2 V
52 3 V
52 3 V
53 4 V
52 8 V
52 12 V
52 18 V
53 25 V
52 32 V
52 43 V
52 60 V
53 80 V
52 98 V
52 113 V
52 120 V
53 128 V
52 144 V
52 158 V
53 159 V
52 151 V
52 134 V
52 114 V
53 100 V
52 90 V
52 79 V
52 63 V
53 42 V
52 16 V
52 -3 V
52 -10 V
53 -4 V
52 1 V
52 -24 V
53 -57 V
52 -58 V
52 -40 V
52 -34 V
53 -39 V
52 -49 V
52 -63 V
52 -73 V
53 -76 V
52 -67 V
52 -54 V
52 -56 V
53 -70 V
52 -81 V
52 -86 V
53 -79 V
52 -71 V
52 -69 V
52 -73 V
53 -72 V
52 -65 V
52 -56 V
52 -52 V
53 -61 V
52 -76 V
52 -68 V
52 -43 V
53 -33 V
52 -43 V
52 -47 V
53 -45 V
52 -44 V
2.000 UP
1.000 UL
LT1
1436 900 Box
1595 900 Box
1648 900 Box
1700 900 Box
1912 900 Box
1964 900 Box
2017 900 Box
2228 900 Box
2281 900 Box
2334 900 Box
2492 900 Box
2545 900 Box
2598 901 Box
2651 901 Box
2704 902 Box
2756 902 Box
2809 902 Box
2862 903 Box
2915 904 Box
2968 906 Box
3020 909 Box
3073 912 Box
3126 917 Box
3179 922 Box
3232 927 Box
3284 933 Box
3337 939 Box
3390 946 Box
3443 955 Box
3496 969 Box
3548 990 Box
3601 1017 Box
3654 1049 Box
3707 1088 Box
3760 1139 Box
3812 1213 Box
3865 1313 Box
3918 1431 Box
3971 1554 Box
4024 1674 Box
4076 1798 Box
4129 1937 Box
4182 2098 Box
4235 2263 Box
4288 2413 Box
4340 2531 Box
4393 2620 Box
4446 2688 Box
4499 2741 Box
4552 2784 Box
4604 2819 Box
4657 2851 Box
4710 2872 Box
4763 2876 Box
4816 2860 Box
4868 2830 Box
4921 2797 Box
4974 2767 Box
5027 2738 Box
5080 2700 Box
5132 2649 Box
5185 2591 Box
5238 2534 Box
5291 2484 Box
5344 2434 Box
5396 2376 Box
5449 2303 Box
5502 2223 Box
5555 2144 Box
5608 2074 Box
5660 2009 Box
5713 1943 Box
5766 1871 Box
5819 1797 Box
5872 1723 Box
5924 1653 Box
5977 1588 Box
6030 1528 Box
6083 1473 Box
6136 1420 Box
6188 1367 Box
6241 1311 Box
6294 1254 Box
6347 1197 Box
6400 1141 Box
6452 1088 Box
6505 1040 Box
6558 997 Box
6611 958 Box
6664 921 Box
2.000 UL
LT0
1436 900 M
106 0 R
51 0 V
52 0 V
2 0 V
106 0 R
49 0 V
53 0 V
3 0 V
104 0 R
49 0 V
53 0 V
52 0 V
52 0 V
52 0 V
53 0 V
52 0 V
52 0 V
52 0 V
53 1 V
52 0 V
52 1 V
53 1 V
52 1 V
52 1 V
52 2 V
53 3 V
52 6 V
52 7 V
52 11 V
53 16 V
52 28 V
52 42 V
52 64 V
53 91 V
52 122 V
52 158 V
53 188 V
52 207 V
52 217 V
52 221 V
53 207 V
52 174 V
52 134 V
52 107 V
53 78 V
52 39 V
52 0 V
52 -27 V
53 -50 V
52 -71 V
52 -88 V
53 -97 V
52 -100 V
52 -96 V
52 -90 V
53 -82 V
52 -78 V
52 -79 V
52 -79 V
53 -67 V
52 -53 V
52 -48 V
52 -49 V
53 -45 V
52 -40 V
52 -35 V
53 -31 V
52 -25 V
52 -21 V
52 -21 V
53 -20 V
52 -12 V
52 -4 V
52 -9 V
53 -20 V
52 -16 V
52 -6 V
52 -8 V
53 -16 V
52 -14 V
52 -5 V
53 -9 V
52 -18 V
52 -20 V
52 -14 V
53 -17 V
52 -25 V
52 -35 V
52 -38 V
53 -37 V
52 -29 V
52 -31 V
52 -38 V
53 -45 V
52 -47 V
52 -49 V
53 -49 V
52 -49 V
2.000 UP
1.000 UL
LT3
1436 900 Circle
1595 900 Circle
1648 900 Circle
1700 900 Circle
1912 900 Circle
1964 900 Circle
2017 900 Circle
2070 900 Circle
2123 900 Circle
2176 900 Circle
2228 900 Circle
2281 900 Circle
2334 901 Circle
2387 901 Circle
2440 901 Circle
2492 902 Circle
2545 903 Circle
2598 905 Circle
2651 907 Circle
2704 910 Circle
2756 914 Circle
2809 919 Circle
2862 926 Circle
2915 935 Circle
2968 949 Circle
3020 970 Circle
3073 1001 Circle
3126 1045 Circle
3179 1104 Circle
3232 1182 Circle
3284 1285 Circle
3337 1422 Circle
3390 1597 Circle
3443 1798 Circle
3496 2010 Circle
3548 2221 Circle
3601 2417 Circle
3654 2588 Circle
3707 2725 Circle
3760 2829 Circle
3812 2904 Circle
3865 2952 Circle
3918 2971 Circle
3971 2955 Circle
4024 2905 Circle
4076 2829 Circle
4129 2743 Circle
4182 2658 Circle
4235 2574 Circle
4288 2491 Circle
4340 2408 Circle
4393 2327 Circle
4446 2249 Circle
4499 2177 Circle
4552 2111 Circle
4604 2054 Circle
4657 2004 Circle
4710 1960 Circle
4763 1915 Circle
4816 1868 Circle
4868 1819 Circle
4921 1771 Circle
4974 1727 Circle
5027 1689 Circle
5080 1660 Circle
5132 1641 Circle
5185 1631 Circle
5238 1625 Circle
5291 1621 Circle
5344 1616 Circle
5396 1609 Circle
5449 1599 Circle
5502 1585 Circle
5555 1569 Circle
5608 1552 Circle
5660 1534 Circle
5713 1516 Circle
5766 1500 Circle
5819 1484 Circle
5872 1466 Circle
5924 1444 Circle
5977 1420 Circle
6030 1393 Circle
6083 1365 Circle
6136 1336 Circle
6188 1305 Circle
6241 1271 Circle
6294 1234 Circle
6347 1193 Circle
6400 1150 Circle
6452 1106 Circle
6505 1060 Circle
6558 1015 Circle
6611 970 Circle
6664 925 Circle
2.000 UL
LT0
1436 900 M
53 0 V
52 0 V
1 0 V
105 0 R
51 0 V
52 0 V
3 0 V
105 0 R
49 0 V
52 0 V
4 0 V
105 0 R
48 0 V
52 0 V
52 0 V
53 0 V
52 0 V
52 1 V
52 0 V
53 1 V
52 3 V
52 8 V
53 13 V
52 27 V
52 53 V
52 81 V
53 108 V
52 133 V
52 152 V
52 159 V
53 148 V
52 127 V
52 102 V
52 68 V
53 26 V
52 -5 V
52 -12 V
53 -16 V
52 -27 V
52 -35 V
52 -35 V
53 -29 V
52 -28 V
52 -25 V
52 -15 V
53 -5 V
52 5 V
52 9 V
52 7 V
53 7 V
52 19 V
52 29 V
53 25 V
52 22 V
52 32 V
52 41 V
53 32 V
52 19 V
52 14 V
52 13 V
53 13 V
52 10 V
52 -1 V
52 -14 V
53 -18 V
52 -19 V
52 -24 V
53 -31 V
52 -30 V
52 -30 V
52 -33 V
53 -41 V
52 -46 V
52 -46 V
52 -39 V
53 -31 V
52 -32 V
52 -39 V
52 -37 V
53 -31 V
52 -36 V
52 -44 V
53 -43 V
52 -32 V
52 -26 V
52 -25 V
53 -31 V
52 -39 V
52 -40 V
52 -34 V
53 -32 V
52 -32 V
52 -34 V
52 -37 V
53 -39 V
52 -37 V
52 -37 V
53 -38 V
52 -38 V
2.000 UP
1.000 UL
LT5
1436 900 TriU
1489 900 TriU
1542 900 TriU
1753 900 TriU
1806 900 TriU
1859 900 TriU
1912 900 TriU
1964 900 TriU
2017 901 TriU
2070 901 TriU
2123 901 TriU
2176 902 TriU
2228 903 TriU
2281 904 TriU
2334 905 TriU
2387 907 TriU
2440 909 TriU
2492 913 TriU
2545 923 TriU
2598 942 TriU
2651 974 TriU
2704 1024 TriU
2756 1096 TriU
2809 1194 TriU
2862 1320 TriU
2915 1473 TriU
2968 1640 TriU
3020 1803 TriU
3073 1946 TriU
3126 2060 TriU
3179 2140 TriU
3232 2180 TriU
3284 2189 TriU
3337 2177 TriU
3390 2153 TriU
3443 2122 TriU
3496 2088 TriU
3548 2054 TriU
3601 2020 TriU
3654 1987 TriU
3707 1954 TriU
3760 1926 TriU
3812 1904 TriU
3865 1890 TriU
3918 1884 TriU
3971 1885 TriU
4024 1889 TriU
4076 1899 TriU
4129 1915 TriU
4182 1938 TriU
4235 1965 TriU
4288 1992 TriU
4340 2017 TriU
4393 2040 TriU
4446 2062 TriU
4499 2085 TriU
4552 2104 TriU
4604 2116 TriU
4657 2118 TriU
4710 2112 TriU
4763 2103 TriU
4816 2094 TriU
4868 2081 TriU
4921 2061 TriU
4974 2030 TriU
5027 1991 TriU
5080 1951 TriU
5132 1913 TriU
5185 1877 TriU
5238 1842 TriU
5291 1808 TriU
5344 1773 TriU
5396 1735 TriU
5449 1694 TriU
5502 1654 TriU
5555 1616 TriU
5608 1584 TriU
5660 1555 TriU
5713 1525 TriU
5766 1492 TriU
5819 1457 TriU
5872 1423 TriU
5924 1393 TriU
5977 1364 TriU
6030 1332 TriU
6083 1296 TriU
6136 1257 TriU
6188 1221 TriU
6241 1190 TriU
6294 1161 TriU
6347 1132 TriU
6400 1099 TriU
6452 1063 TriU
6505 1026 TriU
6558 990 TriU
6611 954 TriU
6664 918 TriU
1.000 UL
LTb
1410 900 M
5280 0 V
0 3780 V
-5280 0 V
0 -3780 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 10
