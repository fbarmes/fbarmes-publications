%!PS-Adobe-2.0
%%Title: mkGlass_paper.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Oct 13 10:41:53 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: 1 0
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 2 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
2570 600 M
0 63 V
0 4017 R
0 -63 V
stroke
2570 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (3)]
[(Symbol) 300.0 0.0 true true 0 (p)]
[(Helvetica) 300.0 0.0 true true 0 (/4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1540 600 M
0 63 V
0 4017 R
0 -63 V
stroke
1540 300 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p)]
[(Helvetica) 300.0 0.0 true true 0 (/2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
510 600 M
0 63 V
0 4017 R
0 -63 V
stroke
510 300 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p)]
[(Helvetica) 300.0 0.0 true true 0 (/4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
510 600 M
3090 0 V
0 4080 V
-3090 0 V
510 600 L
1.000 UP
LTb
624 4340 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (T=4000K)]
] -100.0 MLshow
grestore
1.000 UL
LT0
510 601 M
31 0 V
30 1 V
31 0 V
30 0 V
31 1 V
31 0 V
30 1 V
31 2 V
30 3 V
31 2 V
30 2 V
31 1 V
31 0 V
30 0 V
31 -1 V
30 0 V
31 0 V
31 1 V
30 1 V
31 0 V
30 0 V
31 -1 V
31 0 V
30 0 V
31 1 V
30 1 V
31 1 V
30 2 V
31 2 V
31 3 V
30 4 V
31 3 V
30 4 V
31 4 V
31 6 V
30 6 V
31 6 V
30 7 V
31 7 V
31 7 V
30 7 V
31 7 V
30 8 V
31 10 V
30 14 V
31 19 V
31 23 V
30 24 V
31 24 V
30 25 V
31 27 V
31 32 V
30 37 V
31 44 V
30 49 V
31 50 V
31 49 V
30 48 V
31 50 V
30 52 V
31 54 V
30 57 V
31 61 V
31 63 V
30 64 V
31 58 V
30 47 V
31 33 V
31 26 V
30 28 V
31 32 V
30 36 V
31 39 V
31 36 V
30 28 V
31 17 V
30 7 V
31 3 V
30 -6 V
31 -20 V
31 -40 V
30 -50 V
31 -44 V
30 -31 V
31 -24 V
31 -31 V
30 -41 V
31 -49 V
30 -54 V
31 -62 V
30 -71 V
31 -81 V
31 -86 V
30 -82 V
31 -77 V
30 -76 V
31 -83 V
31 -88 V
30 -92 V
1.000 UL
LT0
510 602 M
31 0 V
30 0 V
31 1 V
30 0 V
31 1 V
31 0 V
30 1 V
31 0 V
30 0 V
31 0 V
30 1 V
31 0 V
31 0 V
30 0 V
31 1 V
30 2 V
31 4 V
31 6 V
30 6 V
31 8 V
30 10 V
31 12 V
31 15 V
30 20 V
31 25 V
30 29 V
31 35 V
30 43 V
31 57 V
31 75 V
30 88 V
31 94 V
30 100 V
31 111 V
31 128 V
30 140 V
31 138 V
30 125 V
31 112 V
31 101 V
30 93 V
31 81 V
30 66 V
31 51 V
30 34 V
31 15 V
31 -6 V
30 -32 V
31 -56 V
30 -68 V
31 -69 V
31 -67 V
30 -77 V
31 -96 V
30 -109 V
31 -110 V
31 -101 V
30 -95 V
31 -92 V
30 -91 V
31 -87 V
30 -79 V
31 -72 V
31 -67 V
30 -61 V
31 -55 V
30 -47 V
31 -38 V
31 -33 V
30 -31 V
31 -29 V
30 -25 V
31 -21 V
31 -17 V
30 -14 V
31 -13 V
30 -11 V
31 -9 V
30 -8 V
31 -7 V
31 -6 V
30 -4 V
31 -4 V
30 -3 V
31 -2 V
31 -2 V
30 -1 V
31 -1 V
30 -1 V
31 -1 V
30 -2 V
31 -2 V
31 -2 V
30 -1 V
31 -1 V
30 0 V
31 -1 V
31 -1 V
30 -1 V
1.000 UL
LT0
510 612 M
31 4 V
30 6 V
31 8 V
30 11 V
31 15 V
31 18 V
30 18 V
31 16 V
30 13 V
31 9 V
30 7 V
31 2 V
31 -2 V
30 -6 V
31 -6 V
30 2 V
31 9 V
31 14 V
30 18 V
31 22 V
30 30 V
31 39 V
31 46 V
30 49 V
31 49 V
30 52 V
31 54 V
30 58 V
31 62 V
31 65 V
30 62 V
31 53 V
30 42 V
31 39 V
31 42 V
30 46 V
31 42 V
30 36 V
31 27 V
31 19 V
30 11 V
31 9 V
30 12 V
31 14 V
30 11 V
31 3 V
31 -6 V
30 -15 V
31 -22 V
30 -23 V
31 -19 V
31 -15 V
30 -19 V
31 -29 V
30 -38 V
31 -41 V
31 -38 V
30 -36 V
31 -35 V
30 -35 V
31 -38 V
30 -43 V
31 -48 V
31 -47 V
30 -43 V
31 -39 V
30 -35 V
31 -33 V
31 -33 V
30 -36 V
31 -38 V
30 -34 V
31 -25 V
31 -21 V
30 -21 V
31 -24 V
30 -24 V
31 -23 V
30 -20 V
31 -18 V
31 -16 V
30 -14 V
31 -13 V
30 -11 V
31 -11 V
31 -9 V
30 -9 V
31 -8 V
30 -9 V
31 -8 V
30 -6 V
31 -4 V
31 -3 V
30 -4 V
31 -5 V
30 -5 V
31 -4 V
31 -2 V
30 -2 V
2.000 UP
1.000 UL
LT3
LTb
3420 4467 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (SiOSi)]
] -100.0 MRshow
grestore
LT3
654 603 BoxF
819 612 BoxF
984 613 BoxF
1149 615 BoxF
1313 616 BoxF
1478 630 BoxF
1643 658 BoxF
1808 695 BoxF
1973 785 BoxF
2137 944 BoxF
2302 1205 BoxF
2467 1510 BoxF
2632 1750 BoxF
2797 1934 BoxF
2961 1936 BoxF
3126 1736 BoxF
3291 1449 BoxF
3456 1016 BoxF
2160 4467 BoxF
2.000 UP
1.000 UL
LT4
LTb
3420 4167 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (OSiO)]
] -100.0 MRshow
grestore
LT4
654 604 CircleF
819 605 CircleF
984 608 CircleF
1149 642 CircleF
1313 753 CircleF
1478 1103 CircleF
1643 1759 CircleF
1808 2295 CircleF
1973 2401 CircleF
2137 2038 CircleF
2302 1491 CircleF
2467 1059 CircleF
2632 812 CircleF
2797 689 CircleF
2961 637 CircleF
3126 618 CircleF
3291 611 CircleF
3456 605 CircleF
2160 4167 CircleF
2.000 UP
1.000 UL
LT5
LTb
3420 3867 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (SiSiSi)]
] -100.0 MRshow
grestore
LT5
654 651 TriUF
819 731 TriUF
984 725 TriUF
1149 816 TriUF
1313 1069 TriUF
1478 1392 TriUF
1643 1622 TriUF
1808 1726 TriUF
1973 1744 TriUF
2137 1638 TriUF
2302 1440 TriUF
2467 1216 TriUF
2632 1019 TriUF
2797 862 TriUF
2961 745 TriUF
3126 678 TriUF
3291 634 TriUF
3456 612 TriUF
2160 3867 TriUF
1.000 UL
LTb
510 600 M
3090 0 V
0 4080 V
-3090 0 V
510 600 L
1.000 UP
1.000 UL
LTb
6690 600 M
0 63 V
0 4017 R
0 -63 V
stroke
6690 300 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5660 600 M
0 63 V
0 4017 R
0 -63 V
stroke
5660 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (3)]
[(Symbol) 300.0 0.0 true true 0 (p)]
[(Helvetica) 300.0 0.0 true true 0 (/4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4630 600 M
0 63 V
0 4017 R
0 -63 V
stroke
4630 300 M
gsave 0 setgray
[ [(Symbol) 300.0 0.0 true true 0 (p)]
[(Helvetica) 300.0 0.0 true true 0 (/2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
3600 600 M
3090 0 V
0 4080 V
-3090 0 V
0 -4080 V
1.000 UP
LTb
3714 4340 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (T=300K)]
] -100.0 MLshow
grestore
1.000 UL
LT0
3600 600 M
10 0 V
50 0 R
2 0 V
31 0 V
6 0 V
35 0 R
21 0 V
26 0 V
37 0 R
30 0 V
31 3 V
31 3 V
31 2 V
31 -1 V
31 1 V
31 3 V
31 -1 V
31 -3 V
31 -3 V
31 -3 V
31 0 V
31 0 V
25 -1 V
35 0 R
2 0 V
31 0 V
19 0 V
36 0 R
7 0 V
28 0 V
53 0 R
12 0 V
24 0 V
36 0 R
2 0 V
10 0 V
25 0 R
27 0 V
9 0 V
39 0 R
14 0 V
31 0 V
5 0 V
35 0 R
22 0 V
16 0 V
50 0 R
27 0 V
31 0 V
31 0 V
31 1 V
31 2 V
31 2 V
31 2 V
31 3 V
31 8 V
31 5 V
31 4 V
31 7 V
31 -1 V
31 9 V
31 19 V
31 15 V
31 31 V
31 37 V
31 45 V
31 56 V
31 32 V
31 49 V
31 65 V
31 57 V
31 113 V
31 102 V
31 81 V
31 107 V
31 100 V
31 74 V
31 108 V
31 157 V
31 61 V
31 59 V
31 96 V
31 84 V
31 68 V
31 23 V
31 23 V
31 49 V
31 -9 V
31 3 V
31 7 V
31 -25 V
31 -2 V
31 -59 V
31 -91 V
31 -79 V
31 -136 V
31 -94 V
31 -72 V
31 -112 V
31 -107 V
31 -118 V
31 -125 V
31 -113 V
31 -109 V
stroke
6576 1112 M
31 -133 V
31 -144 V
31 -135 V
1.000 UL
LT0
3600 600 M
10 0 V
50 0 R
2 0 V
31 0 V
6 0 V
35 0 R
21 0 V
26 0 V
42 0 R
25 0 V
10 0 V
45 0 R
7 0 V
31 0 V
6 0 V
35 0 R
21 0 V
22 0 V
46 0 R
25 0 V
10 0 V
42 0 R
10 0 V
31 0 V
6 0 V
34 0 R
22 0 V
20 0 V
46 0 R
27 0 V
31 0 V
31 0 V
31 1 V
31 0 V
31 2 V
31 5 V
31 4 V
31 4 V
31 9 V
31 16 V
31 30 V
31 63 V
31 117 V
31 197 V
31 294 V
31 371 V
31 453 V
31 528 V
31 552 V
31 508 V
31 425 V
31 256 V
31 12 V
31 -127 V
31 -269 V
31 -401 V
31 -457 V
31 -453 V
31 -428 V
31 -387 V
31 -328 V
31 -259 V
31 -203 V
31 -155 V
31 -105 V
31 -79 V
31 -53 V
31 -39 V
31 -35 V
31 -18 V
31 -13 V
31 -13 V
31 -9 V
31 -5 V
31 -3 V
31 -2 V
31 -3 V
31 -1 V
31 -1 V
31 0 V
31 0 V
31 -1 V
31 0 V
31 0 V
31 0 V
11 0 V
42 0 R
9 0 V
26 0 V
73 0 R
25 0 V
11 0 V
52 0 R
30 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
31 0 V
4 0 V
48 0 R
10 0 V
stroke
6607 600 M
24 0 V
1.000 UL
LT0
3600 600 M
14 0 V
19 0 R
29 2 V
31 6 V
31 0 V
31 -5 V
31 2 V
31 7 V
31 9 V
31 33 V
31 48 V
31 17 V
31 -7 V
31 -31 V
31 -40 V
31 -20 V
31 -6 V
31 -3 V
31 3 V
31 11 V
31 9 V
31 26 V
31 52 V
31 60 V
31 57 V
31 66 V
31 89 V
31 108 V
31 106 V
31 85 V
31 60 V
31 50 V
31 81 V
31 72 V
31 58 V
31 82 V
31 47 V
31 40 V
31 69 V
31 67 V
31 8 V
31 -5 V
31 -12 V
31 -59 V
31 -21 V
31 -2 V
31 13 V
31 52 V
31 26 V
31 7 V
31 -14 V
31 -68 V
31 -78 V
31 -68 V
31 -51 V
31 -42 V
31 -60 V
31 -51 V
31 -38 V
31 -48 V
31 -51 V
31 -38 V
31 -28 V
31 -30 V
31 -20 V
31 -49 V
31 -68 V
31 -52 V
31 -64 V
31 -63 V
31 -51 V
31 -41 V
31 -23 V
31 -17 V
31 -14 V
31 -14 V
31 -27 V
31 -20 V
31 -13 V
31 -19 V
31 -9 V
31 -1 V
31 -6 V
31 -14 V
31 -9 V
31 -16 V
31 -14 V
31 -2 V
31 -3 V
31 -4 V
31 -4 V
31 -4 V
31 -3 V
31 -3 V
31 -1 V
31 -1 V
31 -2 V
29 -1 V
11 0 R
22 0 V
31 0 V
2.000 UP
1.000 UL
LT3
3744 600 BoxF
3909 606 BoxF
4074 609 BoxF
4239 600 BoxF
4403 600 BoxF
4568 600 BoxF
4733 600 BoxF
4898 600 BoxF
5063 611 BoxF
5227 635 BoxF
5392 778 BoxF
5557 1058 BoxF
5722 1586 BoxF
5887 2082 BoxF
6051 2355 BoxF
6216 2316 BoxF
6381 1823 BoxF
6546 1219 BoxF
2.000 UP
1.000 UL
LT4
3744 600 CircleF
3909 600 CircleF
4074 600 CircleF
4239 600 CircleF
4403 600 CircleF
4568 613 CircleF
4733 789 CircleF
4898 2617 CircleF
5063 4433 CircleF
5227 2527 CircleF
5392 1006 CircleF
5557 666 CircleF
5722 609 CircleF
5887 601 CircleF
6051 600 CircleF
6216 600 CircleF
6381 600 CircleF
6546 600 CircleF
2.000 UP
1.000 UL
LT5
3744 604 TriUF
3909 701 TriUF
4074 619 TriUF
4239 647 TriUF
4403 977 TriUF
4568 1410 TriUF
4733 1752 TriUF
4898 1906 TriUF
5063 1892 TriUF
5227 1722 TriUF
5392 1455 TriUF
5557 1249 TriUF
5722 970 TriUF
5887 793 TriUF
6051 696 TriUF
6216 653 TriUF
6381 616 TriUF
6546 603 TriUF
1.000 UL
LTb
3600 600 M
3090 0 V
0 4080 V
-3090 0 V
0 -4080 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 3
