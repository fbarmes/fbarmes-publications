%!PS-Adobe-2.0
%%Title: cmp_paper.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Oct 12 10:56:30 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: 1 0
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/vshift -53 def
/dl {30.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 5 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1008 480 M
63 0 V
5857 0 R
-63 0 V
stroke
912 480 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (-0.005)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 965 M
63 0 V
5857 0 R
-63 0 V
stroke
912 965 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 1451 M
63 0 V
5857 0 R
-63 0 V
stroke
912 1451 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.005)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 1936 M
63 0 V
5857 0 R
-63 0 V
stroke
912 1936 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.01)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 2421 M
63 0 V
5857 0 R
-63 0 V
stroke
912 2421 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.015)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 2907 M
63 0 V
5857 0 R
-63 0 V
stroke
912 2907 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.02)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 3392 M
63 0 V
5857 0 R
-63 0 V
stroke
912 3392 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.025)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 3877 M
63 0 V
5857 0 R
-63 0 V
stroke
912 3877 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.03)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 4363 M
63 0 V
5857 0 R
-63 0 V
stroke
912 4363 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.035)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 4848 M
63 0 V
5857 0 R
-63 0 V
stroke
912 4848 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.04)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1008 480 M
0 63 V
0 4305 R
0 -63 V
stroke
1008 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
grestore
1.000 UL
LTb
2488 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2488 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 45)]
] -53.3 MCshow
grestore
1.000 UL
LTb
3968 480 M
0 63 V
0 4305 R
0 -63 V
stroke
3968 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 90)]
] -53.3 MCshow
grestore
1.000 UL
LTb
5448 480 M
0 63 V
0 4305 R
0 -63 V
stroke
5448 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 135)]
] -53.3 MCshow
grestore
1.000 UL
LTb
6928 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6928 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 180)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1008 480 M
5920 0 V
0 4368 V
-5920 0 V
0 -4368 V
LTb
160 2664 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (P\()]
[(Symbol) 160.0 0.0 true true 0 (a)]
[(Helvetica) 160.0 0.0 true true 0 (\))]
] -53.3 MCshow
grestore
grestore
LTb
3968 80 M
gsave 0 setgray
[ [(Symbol) 160.0 0.0 true true 0 (a)]
] -53.3 MCshow
grestore
1.000 UP
1.000 UL
LT0
1038 965 M
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 1 V
58 0 V
59 0 V
59 0 V
58 0 V
59 1 V
58 2 V
59 1 V
59 1 V
58 2 V
59 2 V
58 3 V
59 4 V
59 2 V
58 3 V
59 5 V
58 9 V
59 8 V
59 8 V
58 8 V
59 11 V
58 16 V
59 29 V
59 49 V
58 72 V
59 91 V
58 113 V
59 143 V
59 181 V
58 223 V
59 248 V
59 239 V
58 227 V
59 244 V
58 253 V
59 209 V
59 148 V
58 109 V
59 91 V
58 81 V
59 69 V
59 50 V
58 31 V
59 31 V
58 38 V
59 31 V
59 18 V
58 19 V
59 17 V
58 -15 V
59 -63 V
59 -88 V
58 -91 V
59 -75 V
58 -65 V
59 -96 V
59 -148 V
58 -163 V
59 -153 V
58 -155 V
59 -165 V
59 -153 V
58 -130 V
59 -128 V
58 -139 V
59 -138 V
59 -126 V
58 -116 V
59 -111 V
58 -101 V
59 -88 V
59 -84 V
58 -86 V
59 -83 V
58 -73 V
59 -69 V
59 -71 V
58 -74 V
1.000 UP
1.000 UL
LT1
1038 965 Box
1097 965 Box
1156 965 Box
1215 965 Box
1274 965 Box
1334 965 Box
1393 965 Box
1452 965 Box
1511 965 Box
1570 965 Box
1630 965 Box
1689 965 Box
1748 965 Box
1807 965 Box
1866 965 Box
1926 965 Box
1985 965 Box
2044 965 Box
2103 965 Box
2162 966 Box
2222 966 Box
2281 966 Box
2340 966 Box
2399 966 Box
2458 966 Box
2518 967 Box
2577 969 Box
2636 971 Box
2695 973 Box
2754 976 Box
2814 980 Box
2873 987 Box
2932 994 Box
2991 999 Box
3050 1002 Box
3110 1005 Box
3169 1013 Box
3228 1029 Box
3287 1047 Box
3346 1062 Box
3406 1069 Box
3465 1076 Box
3524 1095 Box
3583 1134 Box
3642 1186 Box
3702 1245 Box
3761 1305 Box
3820 1382 Box
3879 1494 Box
3938 1656 Box
3998 1863 Box
4057 2107 Box
4116 2376 Box
4175 2649 Box
4234 2899 Box
4294 3107 Box
4353 3276 Box
4412 3415 Box
4471 3532 Box
4530 3629 Box
4590 3709 Box
4649 3774 Box
4708 3832 Box
4767 3894 Box
4826 3965 Box
4886 4033 Box
4945 4084 Box
5004 4105 Box
5063 4104 Box
5122 4094 Box
5182 4081 Box
5241 4056 Box
5300 4005 Box
5359 3918 Box
5418 3806 Box
5478 3681 Box
5537 3555 Box
5596 3427 Box
5655 3294 Box
5714 3155 Box
5774 3010 Box
5833 2861 Box
5892 2711 Box
5951 2561 Box
6010 2412 Box
6070 2264 Box
6129 2122 Box
6188 1992 Box
6247 1877 Box
6306 1773 Box
6366 1672 Box
6425 1572 Box
6484 1475 Box
6543 1389 Box
6602 1316 Box
6662 1253 Box
6721 1193 Box
6780 1131 Box
6839 1068 Box
6898 1003 Box
1.000 UL
LT0
1038 965 M
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 1 V
58 0 V
59 0 V
59 0 V
58 0 V
59 2 V
58 1 V
59 3 V
59 2 V
58 3 V
59 4 V
58 4 V
59 5 V
59 6 V
58 7 V
59 10 V
58 19 V
59 33 V
59 55 V
58 95 V
59 155 V
58 224 V
59 287 V
59 344 V
58 396 V
59 426 V
58 423 V
59 385 V
59 312 V
58 233 V
59 176 V
58 116 V
59 37 V
59 -40 V
58 -92 V
59 -127 V
59 -156 V
58 -179 V
59 -194 V
58 -204 V
59 -206 V
59 -200 V
58 -184 V
59 -169 V
58 -160 V
59 -152 V
59 -134 V
58 -114 V
59 -105 V
58 -103 V
59 -91 V
59 -74 V
58 -56 V
59 -42 V
58 -36 V
59 -34 V
59 -31 V
58 -26 V
59 -13 V
58 -2 V
59 0 V
59 -4 V
58 1 V
59 9 V
58 9 V
59 2 V
59 2 V
58 7 V
59 7 V
58 0 V
59 -3 V
59 -6 V
58 -17 V
59 -33 V
58 -43 V
59 -45 V
59 -51 V
58 -62 V
59 -75 V
58 -87 V
59 -95 V
59 -98 V
58 -99 V
1.000 UP
1.000 UL
LT3
1038 965 Circle
1097 965 Circle
1156 965 Circle
1215 965 Circle
1274 965 Circle
1334 965 Circle
1393 965 Circle
1452 965 Circle
1511 965 Circle
1570 965 Circle
1630 965 Circle
1689 965 Circle
1748 965 Circle
1807 966 Circle
1866 966 Circle
1926 966 Circle
1985 966 Circle
2044 966 Circle
2103 966 Circle
2162 967 Circle
2222 968 Circle
2281 969 Circle
2340 971 Circle
2399 975 Circle
2458 981 Circle
2518 988 Circle
2577 997 Circle
2636 1007 Circle
2695 1016 Circle
2754 1026 Circle
2814 1037 Circle
2873 1052 Circle
2932 1072 Circle
2991 1102 Circle
3050 1145 Circle
3110 1217 Circle
3169 1333 Circle
3228 1507 Circle
3287 1745 Circle
3346 2050 Circle
3406 2422 Circle
3465 2835 Circle
3524 3256 Circle
3583 3657 Circle
3642 4016 Circle
3702 4315 Circle
3761 4538 Circle
3820 4682 Circle
3879 4745 Circle
3938 4730 Circle
3998 4654 Circle
4057 4537 Circle
4116 4396 Circle
4175 4232 Circle
4234 4045 Circle
4294 3835 Circle
4353 3615 Circle
4412 3398 Circle
4471 3195 Circle
4530 3009 Circle
4590 2840 Circle
4649 2687 Circle
4708 2547 Circle
4767 2416 Circle
4826 2293 Circle
4886 2181 Circle
4945 2082 Circle
5004 2000 Circle
5063 1935 Circle
5122 1886 Circle
5182 1852 Circle
5241 1827 Circle
5300 1805 Circle
5359 1782 Circle
5418 1761 Circle
5478 1747 Circle
5537 1744 Circle
5596 1748 Circle
5655 1753 Circle
5714 1755 Circle
5774 1756 Circle
5833 1763 Circle
5892 1778 Circle
5951 1796 Circle
6010 1814 Circle
6070 1827 Circle
6129 1831 Circle
6188 1826 Circle
6247 1810 Circle
6306 1784 Circle
6366 1748 Circle
6425 1704 Circle
6484 1650 Circle
6543 1586 Circle
6602 1512 Circle
6662 1428 Circle
6721 1335 Circle
6780 1234 Circle
6839 1128 Circle
6898 1019 Circle
1.000 UL
LT0
1038 965 M
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
58 0 V
59 0 V
59 1 V
58 0 V
59 0 V
58 0 V
59 1 V
59 0 V
58 3 V
59 4 V
58 8 V
59 23 V
59 54 V
58 96 V
59 145 V
58 198 V
59 253 V
59 284 V
58 281 V
59 243 V
58 174 V
59 102 V
59 39 V
58 -13 V
59 -51 V
58 -73 V
59 -71 V
59 -60 V
58 -47 V
59 -39 V
58 -33 V
59 -21 V
59 10 V
58 29 V
59 16 V
58 6 V
59 33 V
59 57 V
58 44 V
59 26 V
59 39 V
58 56 V
59 42 V
58 25 V
59 34 V
59 47 V
58 32 V
59 7 V
58 1 V
59 2 V
59 -5 V
58 -15 V
59 -29 V
58 -43 V
59 -58 V
59 -64 V
58 -59 V
59 -50 V
58 -58 V
59 -74 V
59 -74 V
58 -64 V
59 -63 V
58 -66 V
59 -62 V
59 -54 V
58 -48 V
59 -46 V
58 -49 V
59 -52 V
59 -52 V
58 -46 V
59 -45 V
58 -45 V
59 -45 V
59 -46 V
58 -44 V
59 -43 V
58 -49 V
59 -58 V
59 -60 V
58 -56 V
59 -54 V
58 -54 V
59 -58 V
59 -62 V
58 -64 V
1.000 UP
1.000 UL
LT5
1038 965 TriU
1097 965 TriU
1156 965 TriU
1215 965 TriU
1274 965 TriU
1334 966 TriU
1393 966 TriU
1452 966 TriU
1511 966 TriU
1570 966 TriU
1630 966 TriU
1689 966 TriU
1748 967 TriU
1807 967 TriU
1866 968 TriU
1926 969 TriU
1985 970 TriU
2044 972 TriU
2103 975 TriU
2162 978 TriU
2222 982 TriU
2281 988 TriU
2340 998 TriU
2399 1019 TriU
2458 1062 TriU
2518 1135 TriU
2577 1255 TriU
2636 1437 TriU
2695 1690 TriU
2754 1987 TriU
2814 2298 TriU
2873 2590 TriU
2932 2833 TriU
2991 2997 TriU
3050 3064 TriU
3110 3055 TriU
3169 3000 TriU
3228 2927 TriU
3287 2843 TriU
3346 2751 TriU
3406 2656 TriU
3465 2571 TriU
3524 2510 TriU
3583 2482 TriU
3642 2482 TriU
3702 2496 TriU
3761 2513 TriU
3820 2533 TriU
3879 2552 TriU
3938 2571 TriU
3998 2595 TriU
4057 2628 TriU
4116 2673 TriU
4175 2724 TriU
4234 2772 TriU
4294 2809 TriU
4353 2836 TriU
4412 2858 TriU
4471 2876 TriU
4530 2889 TriU
4590 2896 TriU
4649 2894 TriU
4708 2887 TriU
4767 2877 TriU
4826 2865 TriU
4886 2846 TriU
4945 2809 TriU
5004 2749 TriU
5063 2673 TriU
5122 2590 TriU
5182 2509 TriU
5241 2435 TriU
5300 2373 TriU
5359 2325 TriU
5418 2281 TriU
5478 2229 TriU
5537 2162 TriU
5596 2088 TriU
5655 2018 TriU
5714 1963 TriU
5774 1920 TriU
5833 1884 TriU
5892 1851 TriU
5951 1816 TriU
6010 1776 TriU
6070 1728 TriU
6129 1675 TriU
6188 1624 TriU
6247 1578 TriU
6306 1535 TriU
6366 1491 TriU
6425 1443 TriU
6484 1392 TriU
6543 1339 TriU
6602 1286 TriU
6662 1232 TriU
6721 1176 TriU
6780 1117 TriU
6839 1056 TriU
6898 995 TriU
1.000 UL
LTb
1008 480 M
5920 0 V
0 4368 V
-5920 0 V
0 -4368 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 10
