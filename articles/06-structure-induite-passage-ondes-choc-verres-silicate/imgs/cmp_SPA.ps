%!PS-Adobe-2.0
%%Title: cmp_paper.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Oct 13 13:30:54 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: 1 0
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {30.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 4 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
510 4680 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 4248 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 3816 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 3384 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 2952 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 2520 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
1283 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
1283 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1798 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
1798 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2313 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
2313 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2828 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
2828 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 8)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3343 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
3343 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 10)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
510 2520 M
3090 0 V
0 2160 V
-3090 0 V
0 -2160 V
1.000 UP
1.000 UL
LT0
0.250 1476 2520 129 511 BoxColFill
LTb
1476 2520 M
0 510 V
128 0 V
0 -510 V
-128 0 V
LT0
0.250 1733 2520 130 1078 BoxColFill
LTb
1733 2520 M
0 1077 V
129 0 V
0 -1077 V
-129 0 V
LT0
0.250 1991 2520 129 1714 BoxColFill
LTb
1991 2520 M
0 1713 V
128 0 V
0 -1713 V
-128 0 V
LT0
0.250 2248 2520 130 1803 BoxColFill
LTb
2248 2520 M
0 1802 V
129 0 V
0 -1802 V
-129 0 V
LT0
0.250 2506 2520 129 1270 BoxColFill
LTb
2506 2520 M
0 1269 V
128 0 V
0 -1269 V
-128 0 V
LT0
0.250 2763 2520 130 924 BoxColFill
LTb
2763 2520 M
0 923 V
129 0 V
0 -923 V
-129 0 V
LT0
0.250 3021 2520 129 716 BoxColFill
LTb
3021 2520 M
0 715 V
128 0 V
0 -715 V
-128 0 V
LT0
0.250 3278 2520 130 632 BoxColFill
LTb
3278 2520 M
0 631 V
129 0 V
0 -631 V
-129 0 V
LT0
2.000 UP
1.000 UL
LT1
1540 2969 CircleF
1798 3547 CircleF
2055 4269 CircleF
2313 4367 CircleF
2570 3936 CircleF
2828 3507 CircleF
3085 3210 CircleF
3343 2994 CircleF
1.000 UL
LTb
510 2520 M
3090 0 V
0 2160 V
-3090 0 V
0 -2160 V
1.000 UP
1.000 UL
LTb
3600 4680 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 4248 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 3816 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 3384 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 2952 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 2520 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
4373 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
4373 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4888 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
4888 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5403 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
5403 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5918 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
5918 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 8)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6433 2520 M
0 63 V
0 2097 R
0 -63 V
stroke
6433 2220 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 10)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
3600 2520 M
3090 0 V
0 2160 V
-3090 0 V
0 -2160 V
1.000 UP
1.000 UL
LT0
0.250 4566 2520 129 636 BoxColFill
LTb
4566 2520 M
0 635 V
128 0 V
0 -635 V
-128 0 V
LT0
0.250 4823 2520 130 1181 BoxColFill
LTb
4823 2520 M
0 1180 V
129 0 V
0 -1180 V
-129 0 V
LT0
0.250 5081 2520 129 1516 BoxColFill
LTb
5081 2520 M
0 1515 V
128 0 V
0 -1515 V
-128 0 V
LT0
0.250 5338 2520 130 1438 BoxColFill
LTb
5338 2520 M
0 1437 V
129 0 V
0 -1437 V
-129 0 V
LT0
0.250 5596 2520 129 1249 BoxColFill
LTb
5596 2520 M
0 1248 V
128 0 V
0 -1248 V
-128 0 V
LT0
0.250 5853 2520 130 1023 BoxColFill
LTb
5853 2520 M
0 1022 V
129 0 V
0 -1022 V
-129 0 V
LT0
0.250 6111 2520 129 831 BoxColFill
LTb
6111 2520 M
0 830 V
128 0 V
0 -830 V
-128 0 V
LT0
0.250 6368 2520 130 773 BoxColFill
LTb
6368 2520 M
0 772 V
129 0 V
0 -772 V
-129 0 V
LT0
2.000 UP
1.000 UL
LT1
4630 3082 CircleF
4888 3610 CircleF
5145 4054 CircleF
5403 4110 CircleF
5660 3886 CircleF
5918 3613 CircleF
6175 3338 CircleF
6433 3105 CircleF
1.000 UL
LTb
3600 2520 M
3090 0 V
0 2160 V
-3090 0 V
0 -2160 V
1.000 UP
1.000 UL
LTb
510 2520 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 2136 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 1752 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 1368 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 984 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
510 600 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
1283 600 M
0 63 V
0 1857 R
0 -63 V
stroke
1283 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1798 600 M
0 63 V
0 1857 R
0 -63 V
stroke
1798 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2313 600 M
0 63 V
0 1857 R
0 -63 V
stroke
2313 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
2828 600 M
0 63 V
0 1857 R
0 -63 V
stroke
2828 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 8)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3343 600 M
0 63 V
0 1857 R
0 -63 V
stroke
3343 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 10)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
510 600 M
3090 0 V
0 1920 V
-3090 0 V
510 600 L
1.000 UP
1.000 UL
LT0
0.250 1476 600 129 607 BoxColFill
LTb
1476 600 M
0 606 V
128 0 V
0 -606 V
-128 0 V
LT0
0.250 1733 600 130 1024 BoxColFill
LTb
1733 600 M
0 1023 V
129 0 V
0 -1023 V
-129 0 V
LT0
0.250 1991 600 129 1300 BoxColFill
LTb
1991 600 M
0 1299 V
128 0 V
0 -1299 V
-128 0 V
LT0
0.250 2248 600 130 1247 BoxColFill
LTb
2248 600 M
0 1246 V
129 0 V
0 -1246 V
-129 0 V
LT0
0.250 2506 600 129 1082 BoxColFill
LTb
2506 600 M
0 1081 V
128 0 V
0 -1081 V
-128 0 V
LT0
0.250 2763 600 130 910 BoxColFill
LTb
2763 600 M
0 909 V
129 0 V
0 -909 V
-129 0 V
LT0
0.250 3021 600 129 764 BoxColFill
LTb
3021 600 M
0 763 V
128 0 V
0 -763 V
-128 0 V
LT0
0.250 3278 600 130 753 BoxColFill
LTb
3278 600 M
0 752 V
129 0 V
0 -752 V
-129 0 V
LT0
2.000 UP
1.000 UL
LT1
1540 1135 CircleF
1798 1577 CircleF
2055 1918 CircleF
2313 1944 CircleF
2570 1792 CircleF
2828 1589 CircleF
3085 1359 CircleF
3343 1166 CircleF
1.000 UL
LTb
510 600 M
3090 0 V
0 1920 V
-3090 0 V
510 600 L
1.000 UP
1.000 UL
LTb
3600 2520 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 2136 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 1752 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 1368 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 984 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
3600 600 M
63 0 V
3027 0 R
-63 0 V
1.000 UL
LTb
4373 600 M
0 63 V
0 1857 R
0 -63 V
stroke
4373 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4888 600 M
0 63 V
0 1857 R
0 -63 V
stroke
4888 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5403 600 M
0 63 V
0 1857 R
0 -63 V
stroke
5403 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5918 600 M
0 63 V
0 1857 R
0 -63 V
stroke
5918 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 8)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6433 600 M
0 63 V
0 1857 R
0 -63 V
stroke
6433 300 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 10)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
3600 600 M
3090 0 V
0 1920 V
-3090 0 V
0 -1920 V
1.000 UP
1.000 UL
LT0
0.250 4566 600 129 653 BoxColFill
LTb
4566 600 M
0 652 V
128 0 V
0 -652 V
-128 0 V
LT0
0.250 4823 600 130 1019 BoxColFill
LTb
4823 600 M
0 1018 V
129 0 V
0 -1018 V
-129 0 V
LT0
0.250 5081 600 129 1255 BoxColFill
LTb
5081 600 M
0 1254 V
128 0 V
0 -1254 V
-128 0 V
LT0
0.250 5338 600 130 1230 BoxColFill
LTb
5338 600 M
0 1229 V
129 0 V
0 -1229 V
-129 0 V
LT0
0.250 5596 600 129 1072 BoxColFill
LTb
5596 600 M
0 1071 V
128 0 V
0 -1071 V
-128 0 V
LT0
0.250 5853 600 130 912 BoxColFill
LTb
5853 600 M
0 911 V
129 0 V
0 -911 V
-129 0 V
LT0
0.250 6111 600 129 777 BoxColFill
LTb
6111 600 M
0 776 V
128 0 V
0 -776 V
-128 0 V
LT0
0.250 6368 600 130 771 BoxColFill
LTb
6368 600 M
0 770 V
129 0 V
0 -770 V
-129 0 V
LT0
2.000 UP
1.000 UL
LT1
4630 1154 CircleF
4888 1558 CircleF
5145 1874 CircleF
5403 1913 CircleF
5660 1796 CircleF
5918 1600 CircleF
6175 1386 CircleF
6433 1198 CircleF
1.000 UL
LTb
3600 600 M
3090 0 V
0 1920 V
-3090 0 V
0 -1920 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 4
