%!PS-Adobe-2.0
%%Title: GBP_P2-rho_k5.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sun Jun  8 15:09:21 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {25 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1350 1244 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 1244 M
[ [(Helvetica) 300.0 0.0 true true (0.0)]
] -100.0 MRshow
1350 1931 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 1931 M
[ [(Helvetica) 300.0 0.0 true true (0.2)]
] -100.0 MRshow
1350 2618 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 2618 M
[ [(Helvetica) 300.0 0.0 true true (0.4)]
] -100.0 MRshow
1350 3305 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 3305 M
[ [(Helvetica) 300.0 0.0 true true (0.6)]
] -100.0 MRshow
1350 3993 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 3993 M
[ [(Helvetica) 300.0 0.0 true true (0.8)]
] -100.0 MRshow
1350 4680 M
63 0 V
5277 0 R
-63 0 V
 stroke
1170 4680 M
[ [(Helvetica) 300.0 0.0 true true (1.0)]
] -100.0 MRshow
1350 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
1350 600 M
[ [(Helvetica) 300.0 0.0 true true (0.08)]
] -100.0 MCshow
2685 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
2685 600 M
[ [(Helvetica) 300.0 0.0 true true (0.12)]
] -100.0 MCshow
4020 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
4020 600 M
[ [(Helvetica) 300.0 0.0 true true (0.16)]
] -100.0 MCshow
5355 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
5355 600 M
[ [(Helvetica) 300.0 0.0 true true (0.20)]
] -100.0 MCshow
6690 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
6690 600 M
[ [(Helvetica) 300.0 0.0 true true (0.24)]
] -100.0 MCshow
1.000 UL
LTb
1350 900 M
5340 0 V
0 3780 V
-5340 0 V
0 -3780 V
 stroke
300 2790 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true (<P)]
[(Helvetica) 240.0 -90.0 true true (1)]
[(Helvetica) 300.0 0.0 true true (>, <P)]
[(Helvetica) 240.0 -90.0 true true (2)]
[(Helvetica) 300.0 0.0 true true (>)]
] -70.0 MCshow
grestore
4020 150 M
[ [(Symbol) 300.0 0.0 true true (r)]
[(Helvetica) 240.0 150.0 true true (*)]
] -130.0 MCshow
1.500 UP
3.000 UL
LT0
2250 4467 M
[ [(Helvetica) 300.0 0.0 true true (<P2>)]
] -100.0 MRshow
2430 4467 M
783 0 V
1598 1370 M
232 20 V
375 28 V
220 32 V
181 45 V
67 88 V
57 5 V
69 295 V
15 -131 V
24 -183 V
50 222 V
104 953 V
85 524 V
59 83 V
7 -16 V
21 -113 V
56 266 V
25 -14 V
73 103 V
102 94 V
40 70 V
117 72 V
107 83 V
132 74 V
124 66 V
148 59 V
125 -11 V
207 116 V
273 123 V
246 75 V
170 37 V
213 39 V
199 36 V
174 25 V
111 9 V
82 8 V
1598 1370 TriU
1830 1390 TriU
2205 1418 TriU
2425 1450 TriU
2606 1495 TriU
2673 1583 TriU
2730 1588 TriU
2799 1883 TriU
2814 1752 TriU
2838 1569 TriU
2888 1791 TriU
2992 2744 TriU
3077 3268 TriU
3136 3351 TriU
3143 3335 TriU
3164 3222 TriU
3220 3488 TriU
3245 3474 TriU
3318 3577 TriU
3420 3671 TriU
3460 3741 TriU
3577 3813 TriU
3684 3896 TriU
3816 3970 TriU
3940 4036 TriU
4088 4095 TriU
4213 4084 TriU
4213 4084 TriU
4420 4200 TriU
4693 4323 TriU
4939 4398 TriU
5109 4435 TriU
5322 4474 TriU
5521 4510 TriU
5695 4535 TriU
5806 4544 TriU
5888 4552 TriU
2821 4467 TriU
1.500 UP
3.000 UL
LT2
2250 4167 M
[ [(Helvetica) 300.0 0.0 true true (<P1>)]
] -100.0 MRshow
2430 4167 M
783 0 V
1598 1245 M
232 -1 V
375 3 V
220 -1 V
181 1 V
67 -3 V
57 0 V
69 5 V
15 -5 V
24 0 V
50 2 V
104 6 V
85 -6 V
59 1 V
7 0 V
21 0 V
56 -2 V
25 3 V
73 0 V
102 2 V
40 -5 V
117 5 V
107 -5 V
132 1 V
124 3 V
148 -4 V
125 3 V
207 -3 V
273 3 V
246 2 V
170 -6 V
213 22 V
199 -2 V
174 -5 V
111 2 V
82 -3 V
1598 1245 CircleF
1830 1244 CircleF
2205 1247 CircleF
2425 1246 CircleF
2606 1247 CircleF
2673 1244 CircleF
2730 1244 CircleF
2799 1249 CircleF
2814 1244 CircleF
2838 1244 CircleF
2888 1246 CircleF
2992 1252 CircleF
3077 1246 CircleF
3136 1247 CircleF
3143 1247 CircleF
3164 1247 CircleF
3220 1245 CircleF
3245 1248 CircleF
3318 1248 CircleF
3420 1250 CircleF
3460 1245 CircleF
3577 1250 CircleF
3684 1245 CircleF
3816 1246 CircleF
3940 1249 CircleF
4088 1245 CircleF
4213 1248 CircleF
4213 1248 CircleF
4420 1245 CircleF
4693 1248 CircleF
4939 1250 CircleF
5109 1244 CircleF
5322 1266 CircleF
5521 1264 CircleF
5695 1259 CircleF
5806 1261 CircleF
5888 1258 CircleF
2821 4167 CircleF
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
