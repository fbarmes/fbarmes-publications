%!PS-Adobe-2.0
%%Title: HP_k3_cpress_dc.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Jun 14 11:39:49 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {25 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1170 750 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 750 M
[ [(Helvetica) 300.0 0.0 true true (0)]
] -100.0 MRshow
1170 1187 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 1187 M
[ [(Helvetica) 300.0 0.0 true true (5)]
] -100.0 MRshow
1170 1623 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 1623 M
[ [(Helvetica) 300.0 0.0 true true (10)]
] -100.0 MRshow
1170 2060 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 2060 M
[ [(Helvetica) 300.0 0.0 true true (15)]
] -100.0 MRshow
1170 2497 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 2497 M
[ [(Helvetica) 300.0 0.0 true true (20)]
] -100.0 MRshow
1170 2933 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 2933 M
[ [(Helvetica) 300.0 0.0 true true (25)]
] -100.0 MRshow
1170 3370 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 3370 M
[ [(Helvetica) 300.0 0.0 true true (30)]
] -100.0 MRshow
1170 3807 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 3807 M
[ [(Helvetica) 300.0 0.0 true true (35)]
] -100.0 MRshow
1170 4243 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 4243 M
[ [(Helvetica) 300.0 0.0 true true (40)]
] -100.0 MRshow
1170 4680 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 4680 M
[ [(Helvetica) 300.0 0.0 true true (45)]
] -100.0 MRshow
1170 750 M
0 63 V
0 3867 R
0 -63 V
 stroke
1170 450 M
[ [(Helvetica) 300.0 0.0 true true (0.00)]
] -100.0 MCshow
2550 750 M
0 63 V
0 3867 R
0 -63 V
 stroke
2550 450 M
[ [(Helvetica) 300.0 0.0 true true (0.25)]
] -100.0 MCshow
3930 750 M
0 63 V
0 3867 R
0 -63 V
 stroke
3930 450 M
[ [(Helvetica) 300.0 0.0 true true (0.50)]
] -100.0 MCshow
5310 750 M
0 63 V
0 3867 R
0 -63 V
 stroke
5310 450 M
[ [(Helvetica) 300.0 0.0 true true (0.75)]
] -100.0 MCshow
6690 750 M
0 63 V
0 3867 R
0 -63 V
 stroke
6690 450 M
[ [(Helvetica) 300.0 0.0 true true (1.00)]
] -100.0 MCshow
1.000 UL
LTb
1170 750 M
5520 0 V
0 3930 V
-5520 0 V
0 -3930 V
 stroke
300 2715 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true (<)]
[(Symbol) 300.0 0.0 true true (d)]
[(Helvetica) 300.0 0.0 true true (r)]
[(Helvetica) 240.0 150.0 true true (2)]
[(Helvetica) 300.0 0.0 true true (\(n\)>)]
] -130.0 MCshow
grestore
3930 150 M
[ [(Helvetica) 300.0 0.0 true true (n \(10)]
[(Helvetica) 240.0 150.0 true true (6)]
[(Helvetica) 300.0 0.0 true true ( sweeps\))]
] -130.0 MCshow
2274 4243 M
[ [(Symbol) 300.0 0.0 true true (r)]
[(Helvetica) 240.0 150.0 true true (*)]
] -130.0 MLshow
1.500 UP
2.000 UL
LT0
2454 3807 M
[ [(Helvetica) 300.0 0.0 true true (0.28)]
] -100.0 MLshow
1851 3807 M
423 0 V
1176 759 M
165 138 V
166 139 V
165 144 V
166 162 V
166 139 V
165 117 V
166 128 V
165 121 V
166 161 V
166 142 V
165 111 V
166 120 V
165 96 V
166 113 V
166 145 V
165 131 V
166 128 V
165 111 V
166 71 V
166 148 V
165 134 V
166 121 V
165 104 V
166 71 V
166 71 V
165 63 V
166 57 V
165 88 V
166 81 V
166 37 V
165 63 V
166 65 V
165 39 V
1176 759 Box
1341 897 Box
1507 1036 Box
1672 1180 Box
1838 1342 Box
2004 1481 Box
2169 1598 Box
2335 1726 Box
2500 1847 Box
2666 2008 Box
2832 2150 Box
2997 2261 Box
3163 2381 Box
3328 2477 Box
3494 2590 Box
3660 2735 Box
3825 2866 Box
3991 2994 Box
4156 3105 Box
4322 3176 Box
4488 3324 Box
4653 3458 Box
4819 3579 Box
4984 3683 Box
5150 3754 Box
5316 3825 Box
5481 3888 Box
5647 3945 Box
5812 4033 Box
5978 4114 Box
6144 4151 Box
6309 4214 Box
6475 4279 Box
6640 4318 Box
2063 3807 Box
1.500 UP
2.000 UL
LT1
2454 3507 M
[ [(Helvetica) 300.0 0.0 true true (0.29)]
] -100.0 MLshow
1851 3507 M
423 0 V
1176 757 M
165 86 V
166 83 V
165 84 V
166 79 V
166 78 V
165 74 V
166 83 V
165 75 V
166 85 V
166 75 V
165 72 V
166 70 V
165 62 V
166 67 V
166 42 V
165 80 V
166 79 V
165 65 V
166 57 V
166 95 V
165 69 V
166 76 V
165 68 V
166 88 V
166 76 V
165 92 V
166 92 V
165 77 V
166 61 V
166 49 V
165 65 V
166 70 V
165 23 V
1176 757 Circle
1341 843 Circle
1507 926 Circle
1672 1010 Circle
1838 1089 Circle
2004 1167 Circle
2169 1241 Circle
2335 1324 Circle
2500 1399 Circle
2666 1484 Circle
2832 1559 Circle
2997 1631 Circle
3163 1701 Circle
3328 1763 Circle
3494 1830 Circle
3660 1872 Circle
3825 1952 Circle
3991 2031 Circle
4156 2096 Circle
4322 2153 Circle
4488 2248 Circle
4653 2317 Circle
4819 2393 Circle
4984 2461 Circle
5150 2549 Circle
5316 2625 Circle
5481 2717 Circle
5647 2809 Circle
5812 2886 Circle
5978 2947 Circle
6144 2996 Circle
6309 3061 Circle
6475 3131 Circle
6640 3154 Circle
2063 3507 Circle
1.500 UP
2.000 UL
LT2
2454 3207 M
[ [(Helvetica) 300.0 0.0 true true (0.30)]
] -100.0 MLshow
1851 3207 M
423 0 V
1176 755 M
165 48 V
166 37 V
165 41 V
166 38 V
166 27 V
165 43 V
166 44 V
165 32 V
166 40 V
166 24 V
165 38 V
166 37 V
165 47 V
166 49 V
166 46 V
165 31 V
166 15 V
165 19 V
166 24 V
166 36 V
165 27 V
166 36 V
165 36 V
166 48 V
166 36 V
165 42 V
166 33 V
165 39 V
166 33 V
166 46 V
165 40 V
166 34 V
165 45 V
1176 755 TriU
1341 803 TriU
1507 840 TriU
1672 881 TriU
1838 919 TriU
2004 946 TriU
2169 989 TriU
2335 1033 TriU
2500 1065 TriU
2666 1105 TriU
2832 1129 TriU
2997 1167 TriU
3163 1204 TriU
3328 1251 TriU
3494 1300 TriU
3660 1346 TriU
3825 1377 TriU
3991 1392 TriU
4156 1411 TriU
4322 1435 TriU
4488 1471 TriU
4653 1498 TriU
4819 1534 TriU
4984 1570 TriU
5150 1618 TriU
5316 1654 TriU
5481 1696 TriU
5647 1729 TriU
5812 1768 TriU
5978 1801 TriU
6144 1847 TriU
6309 1887 TriU
6475 1921 TriU
6640 1966 TriU
2063 3207 TriU
1.500 UP
2.000 UL
LT3
2454 2907 M
[ [(Helvetica) 300.0 0.0 true true (0.31)]
] -100.0 MLshow
1851 2907 M
423 0 V
1176 754 M
165 21 V
166 11 V
165 11 V
166 11 V
166 19 V
165 15 V
166 16 V
165 12 V
166 20 V
166 14 V
165 11 V
166 12 V
165 14 V
166 9 V
166 12 V
165 13 V
166 13 V
165 17 V
166 13 V
166 18 V
165 9 V
166 18 V
165 22 V
166 7 V
166 13 V
165 25 V
166 13 V
165 14 V
166 9 V
166 23 V
165 18 V
166 28 V
165 1 V
1176 754 Dia
1341 775 Dia
1507 786 Dia
1672 797 Dia
1838 808 Dia
2004 827 Dia
2169 842 Dia
2335 858 Dia
2500 870 Dia
2666 890 Dia
2832 904 Dia
2997 915 Dia
3163 927 Dia
3328 941 Dia
3494 950 Dia
3660 962 Dia
3825 975 Dia
3991 988 Dia
4156 1005 Dia
4322 1018 Dia
4488 1036 Dia
4653 1045 Dia
4819 1063 Dia
4984 1085 Dia
5150 1092 Dia
5316 1105 Dia
5481 1130 Dia
5647 1143 Dia
5812 1157 Dia
5978 1166 Dia
6144 1189 Dia
6309 1207 Dia
6475 1235 Dia
6640 1236 Dia
2063 2907 Dia
1.500 UP
2.000 UL
LT6
2454 2607 M
[ [(Helvetica) 300.0 0.0 true true (0.32)]
] -100.0 MLshow
1851 2607 M
423 0 V
1176 753 M
165 11 V
166 5 V
165 6 V
166 4 V
166 3 V
165 3 V
166 5 V
165 3 V
166 2 V
166 9 V
165 7 V
166 2 V
165 5 V
166 1 V
166 1 V
165 3 V
166 5 V
165 1 V
166 3 V
166 -1 V
165 4 V
166 1 V
165 6 V
166 6 V
166 1 V
165 2 V
166 5 V
165 9 V
166 -2 V
166 5 V
165 2 V
166 -1 V
165 1 V
1176 753 TriD
1341 764 TriD
1507 769 TriD
1672 775 TriD
1838 779 TriD
2004 782 TriD
2169 785 TriD
2335 790 TriD
2500 793 TriD
2666 795 TriD
2832 804 TriD
2997 811 TriD
3163 813 TriD
3328 818 TriD
3494 819 TriD
3660 820 TriD
3825 823 TriD
3991 828 TriD
4156 829 TriD
4322 832 TriD
4488 831 TriD
4653 835 TriD
4819 836 TriD
4984 842 TriD
5150 848 TriD
5316 849 TriD
5481 851 TriD
5647 856 TriD
5812 865 TriD
5978 863 TriD
6144 868 TriD
6309 870 TriD
6475 869 TriD
6640 870 TriD
2063 2607 TriD
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
