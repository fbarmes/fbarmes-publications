%!PS-Adobe-2.0
%%Title: GBP_k3-2_cpress_dc.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Apr  5 14:40:44 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {25 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1170 900 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 900 M
[ [(Helvetica) 300.0 0.0 true true (0)]
] -100.0 MRshow
1170 1440 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 1440 M
[ [(Helvetica) 300.0 0.0 true true (10)]
] -100.0 MRshow
1170 1980 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 1980 M
[ [(Helvetica) 300.0 0.0 true true (20)]
] -100.0 MRshow
1170 2520 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 2520 M
[ [(Helvetica) 300.0 0.0 true true (30)]
] -100.0 MRshow
1170 3060 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 3060 M
[ [(Helvetica) 300.0 0.0 true true (40)]
] -100.0 MRshow
1170 3600 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 3600 M
[ [(Helvetica) 300.0 0.0 true true (50)]
] -100.0 MRshow
1170 4140 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 4140 M
[ [(Helvetica) 300.0 0.0 true true (60)]
] -100.0 MRshow
1170 4680 M
63 0 V
5457 0 R
-63 0 V
 stroke
990 4680 M
[ [(Helvetica) 300.0 0.0 true true (70)]
] -100.0 MRshow
1170 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
1170 600 M
[ [(Helvetica) 300.0 0.0 true true (0.000)]
] -100.0 MCshow
2550 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
2550 600 M
[ [(Helvetica) 300.0 0.0 true true (0.125)]
] -100.0 MCshow
3930 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
3930 600 M
[ [(Helvetica) 300.0 0.0 true true (0.250)]
] -100.0 MCshow
5310 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
5310 600 M
[ [(Helvetica) 300.0 0.0 true true (0.375)]
] -100.0 MCshow
6690 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
6690 600 M
[ [(Helvetica) 300.0 0.0 true true (0.500)]
] -100.0 MCshow
1.000 UL
LTb
1170 900 M
5520 0 V
0 3780 V
-5520 0 V
0 -3780 V
 stroke
300 2790 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true (<)]
[(Symbol) 300.0 0.0 true true (d)]
[(Helvetica) 300.0 0.0 true true (r)]
[(Helvetica) 240.0 150.0 true true (2)]
[(Helvetica) 300.0 0.0 true true (\(n\)>)]
] -130.0 MCshow
grestore
3930 150 M
[ [(Helvetica) 300.0 0.0 true true (n \(10)]
[(Helvetica) 240.0 150.0 true true (6)]
[(Helvetica) 300.0 0.0 true true ( sweeps\))]
] -130.0 MCshow
1722 4410 M
[ [(Helvetica) 300.0 0.0 true true (P)]
[(Helvetica) 240.0 150.0 true true (*)]
[(Helvetica) 300.0 0.0 true true ( =)]
] -130.0 MLshow
1.500 UP
2.000 UL
LT0
2442 4140 M
[ [(Helvetica) 300.0 0.0 true true (3.0)]
] -100.0 MRshow
1389 4140 M
333 0 V
1181 925 M
221 373 V
221 378 V
220 338 V
221 276 V
221 273 V
221 187 V
221 260 V
220 173 V
221 154 V
221 122 V
221 183 V
221 66 V
220 75 V
221 81 V
221 78 V
221 52 V
221 48 V
220 97 V
221 28 V
221 -10 V
221 16 V
221 -28 V
220 -12 V
221 -21 V
1181 925 Box
1402 1298 Box
1623 1676 Box
1843 2014 Box
2064 2290 Box
2285 2563 Box
2506 2750 Box
2727 3010 Box
2947 3183 Box
3168 3337 Box
3389 3459 Box
3610 3642 Box
3831 3708 Box
4051 3783 Box
4272 3864 Box
4493 3942 Box
4714 3994 Box
4935 4042 Box
5155 4139 Box
5376 4167 Box
5597 4157 Box
5818 4173 Box
6039 4145 Box
6259 4133 Box
6480 4112 Box
1556 4140 Box
1.500 UP
2.000 UL
LT1
2442 3840 M
[ [(Helvetica) 300.0 0.0 true true (4.0)]
] -100.0 MRshow
1389 3840 M
333 0 V
1181 916 M
221 217 V
221 210 V
220 191 V
221 219 V
221 175 V
221 181 V
221 167 V
220 153 V
221 132 V
221 159 V
221 102 V
221 112 V
220 93 V
221 109 V
221 123 V
221 98 V
221 61 V
220 69 V
221 93 V
221 79 V
221 53 V
221 73 V
220 -59 V
221 37 V
1181 916 Circle
1402 1133 Circle
1623 1343 Circle
1843 1534 Circle
2064 1753 Circle
2285 1928 Circle
2506 2109 Circle
2727 2276 Circle
2947 2429 Circle
3168 2561 Circle
3389 2720 Circle
3610 2822 Circle
3831 2934 Circle
4051 3027 Circle
4272 3136 Circle
4493 3259 Circle
4714 3357 Circle
4935 3418 Circle
5155 3487 Circle
5376 3580 Circle
5597 3659 Circle
5818 3712 Circle
6039 3785 Circle
6259 3726 Circle
6480 3763 Circle
1556 3840 Circle
1.500 UP
2.000 UL
LT2
2442 3540 M
[ [(Helvetica) 300.0 0.0 true true (5.0)]
] -100.0 MRshow
1389 3540 M
333 0 V
1181 911 M
221 101 V
221 102 V
220 97 V
221 93 V
221 86 V
221 91 V
221 102 V
220 79 V
221 84 V
221 114 V
221 106 V
221 50 V
220 75 V
221 57 V
221 72 V
221 69 V
221 80 V
220 54 V
221 52 V
221 16 V
221 50 V
221 50 V
220 50 V
221 57 V
1181 911 TriU
1402 1012 TriU
1623 1114 TriU
1843 1211 TriU
2064 1304 TriU
2285 1390 TriU
2506 1481 TriU
2727 1583 TriU
2947 1662 TriU
3168 1746 TriU
3389 1860 TriU
3610 1966 TriU
3831 2016 TriU
4051 2091 TriU
4272 2148 TriU
4493 2220 TriU
4714 2289 TriU
4935 2369 TriU
5155 2423 TriU
5376 2475 TriU
5597 2491 TriU
5818 2541 TriU
6039 2591 TriU
6259 2641 TriU
6480 2698 TriU
1556 3540 TriU
1.500 UP
2.000 UL
LT3
2442 3240 M
[ [(Helvetica) 300.0 0.0 true true (6.0)]
] -100.0 MRshow
1389 3240 M
333 0 V
1181 909 M
221 60 V
221 46 V
220 40 V
221 34 V
221 36 V
221 33 V
221 38 V
220 20 V
221 31 V
221 28 V
221 36 V
221 32 V
220 34 V
221 48 V
221 24 V
221 15 V
221 42 V
220 19 V
221 33 V
221 38 V
221 23 V
221 30 V
220 33 V
221 21 V
1181 909 Dia
1402 969 Dia
1623 1015 Dia
1843 1055 Dia
2064 1089 Dia
2285 1125 Dia
2506 1158 Dia
2727 1196 Dia
2947 1216 Dia
3168 1247 Dia
3389 1275 Dia
3610 1311 Dia
3831 1343 Dia
4051 1377 Dia
4272 1425 Dia
4493 1449 Dia
4714 1464 Dia
4935 1506 Dia
5155 1525 Dia
5376 1558 Dia
5597 1596 Dia
5818 1619 Dia
6039 1649 Dia
6259 1682 Dia
6480 1703 Dia
1556 3240 Dia
1.500 UP
2.000 UL
LT6
2442 2940 M
[ [(Helvetica) 300.0 0.0 true true (7.0)]
] -100.0 MRshow
1389 2940 M
333 0 V
1181 907 M
221 33 V
221 20 V
220 17 V
221 24 V
221 17 V
221 22 V
221 17 V
220 19 V
221 16 V
221 14 V
221 11 V
221 21 V
220 13 V
221 12 V
221 16 V
221 22 V
221 10 V
220 8 V
221 23 V
221 15 V
221 10 V
221 14 V
220 26 V
221 14 V
1181 907 TriD
1402 940 TriD
1623 960 TriD
1843 977 TriD
2064 1001 TriD
2285 1018 TriD
2506 1040 TriD
2727 1057 TriD
2947 1076 TriD
3168 1092 TriD
3389 1106 TriD
3610 1117 TriD
3831 1138 TriD
4051 1151 TriD
4272 1163 TriD
4493 1179 TriD
4714 1201 TriD
4935 1211 TriD
5155 1219 TriD
5376 1242 TriD
5597 1257 TriD
5818 1267 TriD
6039 1281 TriD
6259 1307 TriD
6480 1321 TriD
1556 2940 TriD
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
