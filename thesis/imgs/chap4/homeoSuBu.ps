%!PS-Adobe-2.0
%%Title: temp.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Jan 30 16:06:21 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1050 900 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 900 M
[ [(Helvetica) 300.0 0.0 true true (0.0)]
] -100.0 MRshow
1050 2160 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 2160 M
[ [(Helvetica) 300.0 0.0 true true (1.0)]
] -100.0 MRshow
1050 3420 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 3420 M
[ [(Helvetica) 300.0 0.0 true true (2.0)]
] -100.0 MRshow
1050 4680 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 4680 M
[ [(Helvetica) 300.0 0.0 true true (3.0)]
] -100.0 MRshow
1050 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
1050 600 M
[ [(Helvetica) 300.0 0.0 true true (-6.0)]
] -100.0 MCshow
1990 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
1990 600 M
[ [(Helvetica) 300.0 0.0 true true (-4.0)]
] -100.0 MCshow
2930 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
2930 600 M
[ [(Helvetica) 300.0 0.0 true true (-2.0)]
] -100.0 MCshow
3870 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
3870 600 M
[ [(Helvetica) 300.0 0.0 true true (0.0)]
] -100.0 MCshow
4810 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
4810 600 M
[ [(Helvetica) 300.0 0.0 true true (2.0)]
] -100.0 MCshow
5750 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
5750 600 M
[ [(Helvetica) 300.0 0.0 true true (4.0)]
] -100.0 MCshow
6690 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
6690 600 M
[ [(Helvetica) 300.0 0.0 true true (6.0)]
] -100.0 MCshow
1.000 UL
LTb
1050 900 M
5640 0 V
0 3780 V
-5640 0 V
0 -3780 V
 stroke
3870 150 M
[ [(Helvetica) 300.0 0.0 true true (z)]
] -100.0 MCshow
110 2475 M
[ [(Symbol) 300.0 0.0 true true (r)]
[(Helvetica) 240.0 150.0 true true (*)]
[(Helvetica) 240.0 -90.0 true true (l)]
] -100.0 MLshow
1285 4050 M
[ [(Helvetica) 300.0 0.0 true true (Sb)]
] -100.0 MLshow
3870 4050 M
[ [(Helvetica) 300.0 0.0 true true (Bu)]
] -100.0 MLshow
6220 4050 M
[ [(Helvetica) 300.0 0.0 true true (St)]
] -100.0 MLshow
1.000 UL
LT6
1755 900 M
0 3780 V
1.000 UL
LT6
5929 900 M
0 3780 V
1.000 UP
1.000 UL
LT2
1078 945 M
57 5 V
56 91 V
56 2314 V
57 197 V
56 -1453 V
57 -592 V
56 -281 V
56 -127 V
57 -66 V
56 -37 V
57 -11 V
56 -2 V
56 4 V
57 7 V
56 19 V
57 38 V
56 48 V
56 72 V
57 49 V
56 77 V
57 63 V
56 76 V
56 70 V
57 35 V
56 0 V
57 -52 V
56 -58 V
56 -95 V
57 -77 V
56 -38 V
57 -41 V
56 -17 V
56 5 V
57 3 V
56 26 V
57 22 V
56 18 V
56 24 V
57 28 V
56 18 V
57 -8 V
56 15 V
56 11 V
57 -12 V
56 -6 V
57 -5 V
56 -25 V
56 9 V
57 -13 V
56 8 V
57 0 V
56 7 V
56 1 V
57 11 V
56 16 V
57 -7 V
56 -2 V
56 0 V
57 -15 V
56 -14 V
57 -12 V
56 -28 V
56 -13 V
57 -24 V
56 -25 V
57 -6 V
56 2 V
56 16 V
57 22 V
56 60 V
57 65 V
56 96 V
56 69 V
57 30 V
56 -4 V
57 -41 V
56 -45 V
56 -69 V
57 -83 V
56 -56 V
57 -62 V
56 -64 V
56 -55 V
57 -34 V
56 -18 V
57 -13 V
56 0 V
56 6 V
57 8 V
56 29 V
57 69 V
56 124 V
56 280 V
57 583 V
56 1461 V
57 -200 V
56 -2299 V
56 -97 V
57 0 V
1078 945 Pls
1135 950 Pls
1191 1041 Pls
1247 3355 Pls
1304 3552 Pls
1360 2099 Pls
1417 1507 Pls
1473 1226 Pls
1529 1099 Pls
1586 1033 Pls
1642 996 Pls
1699 985 Pls
1755 983 Pls
1811 987 Pls
1868 994 Pls
1924 1013 Pls
1981 1051 Pls
2037 1099 Pls
2093 1171 Pls
2150 1220 Pls
2206 1297 Pls
2263 1360 Pls
2319 1436 Pls
2375 1506 Pls
2432 1541 Pls
2488 1541 Pls
2545 1489 Pls
2601 1431 Pls
2657 1336 Pls
2714 1259 Pls
2770 1221 Pls
2827 1180 Pls
2883 1163 Pls
2939 1168 Pls
2996 1171 Pls
3052 1197 Pls
3109 1219 Pls
3165 1237 Pls
3221 1261 Pls
3278 1289 Pls
3334 1307 Pls
3391 1299 Pls
3447 1314 Pls
3503 1325 Pls
3560 1313 Pls
3616 1307 Pls
3673 1302 Pls
3729 1277 Pls
3785 1286 Pls
3842 1273 Pls
3898 1281 Pls
3955 1281 Pls
4011 1288 Pls
4067 1289 Pls
4124 1300 Pls
4180 1316 Pls
4237 1309 Pls
4293 1307 Pls
4349 1307 Pls
4406 1292 Pls
4462 1278 Pls
4519 1266 Pls
4575 1238 Pls
4631 1225 Pls
4688 1201 Pls
4744 1176 Pls
4801 1170 Pls
4857 1172 Pls
4913 1188 Pls
4970 1210 Pls
5026 1270 Pls
5083 1335 Pls
5139 1431 Pls
5195 1500 Pls
5252 1530 Pls
5308 1526 Pls
5365 1485 Pls
5421 1440 Pls
5477 1371 Pls
5534 1288 Pls
5590 1232 Pls
5647 1170 Pls
5703 1106 Pls
5759 1051 Pls
5816 1017 Pls
5872 999 Pls
5929 986 Pls
5985 986 Pls
6041 992 Pls
6098 1000 Pls
6154 1029 Pls
6211 1098 Pls
6267 1222 Pls
6323 1502 Pls
6380 2085 Pls
6436 3546 Pls
6493 3346 Pls
6549 1047 Pls
6605 950 Pls
6662 950 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
