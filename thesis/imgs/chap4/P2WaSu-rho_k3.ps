%!PS-Adobe-2.0
%%Title: P2WaSu-rho_k3.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Jun 14 10:57:58 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -83 def
/dl {25 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
1275 750 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 750 M
[ [(Helvetica) 250.0 0.0 true true (0.00)]
] -83.3 MRshow
1275 1748 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 1748 M
[ [(Helvetica) 250.0 0.0 true true (0.25)]
] -83.3 MRshow
1275 2745 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 2745 M
[ [(Helvetica) 250.0 0.0 true true (0.50)]
] -83.3 MRshow
1275 3743 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 3743 M
[ [(Helvetica) 250.0 0.0 true true (0.75)]
] -83.3 MRshow
1275 4740 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 4740 M
[ [(Helvetica) 250.0 0.0 true true (1.00)]
] -83.3 MRshow
1275 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
1275 500 M
[ [(Helvetica) 250.0 0.0 true true (0.20)]
] -83.3 MCshow
2650 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
2650 500 M
[ [(Helvetica) 250.0 0.0 true true (0.24)]
] -83.3 MCshow
4025 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
4025 500 M
[ [(Helvetica) 250.0 0.0 true true (0.28)]
] -83.3 MCshow
5400 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
5400 500 M
[ [(Helvetica) 250.0 0.0 true true (0.32)]
] -83.3 MCshow
6775 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
6775 500 M
[ [(Helvetica) 250.0 0.0 true true (0.36)]
] -83.3 MCshow
1.000 UL
LTb
1275 750 M
5500 0 V
0 3990 V
-5500 0 V
0 -3990 V
 stroke
250 2745 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true (  )]
] -83.3 MCshow
grestore
4025 125 M
[ [(Symbol) 250.0 0.0 true true (r)]
[(Helvetica) 200.0 125.0 true true (*)]
] -108.3 MCshow
2134 4461 M
[ [(Helvetica) 250.0 0.0 true true (k)]
[(Helvetica) 200.0 -75.0 true true (s)]
[(Helvetica) 250.0 0.0 true true (/k = )]
] -58.3 MLshow
175 2905 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true (|)]
] -83.3 MCshow
grestore
347 2745 M
[ [(Helvetica) 250.0 0.0 true true (P)]
[(Helvetica) 200.0 125.0 true true (Su)]
] -108.3 MCshow
347 2745 M
[ [(Helvetica) 250.0 0.0 true true ( )]
[(Helvetica) 200.0 -75.0 true true (2)]
] -58.3 MCshow
1.000 UP
2.000 UL
LT0
3056 4141 M
[ [(Helvetica) 250.0 0.0 true true (0.00)]
] -83.3 MRshow
1643 4141 M
663 0 V
1275 1688 M
687 299 V
688 355 V
688 399 V
343 191 V
344 169 V
344 173 V
86 37 V
86 25 V
86 48 V
85 35 V
86 30 V
86 50 V
86 14 V
86 48 V
172 75 V
172 40 V
172 39 V
172 64 V
172 45 V
172 43 V
1275 1688 TriU
1962 1987 TriU
2650 2342 TriU
3338 2741 TriU
3681 2932 TriU
4025 3101 TriU
4369 3274 TriU
4455 3311 TriU
4541 3336 TriU
4627 3384 TriU
4712 3419 TriU
4798 3449 TriU
4884 3499 TriU
4970 3513 TriU
5056 3561 TriU
5228 3636 TriU
5400 3676 TriU
5572 3715 TriU
5744 3779 TriU
5916 3824 TriU
6088 3867 TriU
1975 4141 TriU
1.000 UP
2.000 UL
LT1
3056 3891 M
[ [(Helvetica) 250.0 0.0 true true (0.40)]
] -83.3 MRshow
1643 3891 M
663 0 V
1275 1497 M
687 79 V
688 202 V
688 161 V
343 28 V
344 172 V
172 75 V
172 53 V
86 85 V
86 61 V
86 62 V
85 135 V
86 93 V
86 -20 V
86 136 V
86 121 V
172 91 V
172 184 V
172 159 V
172 214 V
172 99 V
172 92 V
1275 1497 Circle
1962 1576 Circle
2650 1778 Circle
3338 1939 Circle
3681 1967 Circle
4025 2139 Circle
4197 2214 Circle
4369 2267 Circle
4455 2352 Circle
4541 2413 Circle
4627 2475 Circle
4712 2610 Circle
4798 2703 Circle
4884 2683 Circle
4970 2819 Circle
5056 2940 Circle
5228 3031 Circle
5400 3215 Circle
5572 3374 Circle
5744 3588 Circle
5916 3687 Circle
6088 3779 Circle
1975 3891 Circle
1.000 UP
2.000 UL
LT2
3056 3641 M
[ [(Helvetica) 250.0 0.0 true true (0.50)]
] -83.3 MRshow
1643 3641 M
663 0 V
1275 1497 M
687 182 V
688 51 V
688 -44 V
343 207 V
344 65 V
172 18 V
172 39 V
86 20 V
86 38 V
86 16 V
85 -4 V
86 48 V
86 -133 V
86 213 V
86 -199 V
172 239 V
172 68 V
172 -12 V
172 587 V
172 72 V
172 171 V
1275 1497 Box
1962 1679 Box
2650 1730 Box
3338 1686 Box
3681 1893 Box
4025 1958 Box
4197 1976 Box
4369 2015 Box
4455 2035 Box
4541 2073 Box
4627 2089 Box
4712 2085 Box
4798 2133 Box
4884 2000 Box
4970 2213 Box
5056 2014 Box
5228 2253 Box
5400 2321 Box
5572 2309 Box
5744 2896 Box
5916 2968 Box
6088 3139 Box
1975 3641 Box
1.000 UP
2.000 UL
LT3
3056 3391 M
[ [(Helvetica) 250.0 0.0 true true (0.60)]
] -83.3 MRshow
1643 3391 M
663 0 V
1275 1770 M
687 -86 V
688 46 V
688 5 V
343 -36 V
344 17 V
172 13 V
172 28 V
86 13 V
86 114 V
86 79 V
85 -205 V
86 157 V
86 -47 V
86 243 V
86 90 V
172 417 V
172 500 V
172 386 V
172 139 V
1275 1770 TriD
1962 1684 TriD
2650 1730 TriD
3338 1735 TriD
3681 1699 TriD
4025 1716 TriD
4197 1729 TriD
4369 1757 TriD
4455 1770 TriD
4541 1884 TriD
4627 1963 TriD
4712 1758 TriD
4798 1915 TriD
4884 1868 TriD
4970 2111 TriD
5056 2201 TriD
5228 2618 TriD
5400 3118 TriD
5572 3504 TriD
5744 3643 TriD
1975 3391 TriD
1.000 UP
2.000 UL
LT6
3056 3141 M
[ [(Helvetica) 250.0 0.0 true true (1.00)]
] -83.3 MRshow
1643 3141 M
663 0 V
1275 1743 M
687 111 V
688 81 V
688 167 V
343 97 V
344 183 V
172 -116 V
172 441 V
86 -100 V
86 100 V
86 61 V
85 13 V
86 558 V
86 29 V
86 201 V
86 169 V
172 66 V
172 144 V
172 37 V
172 64 V
172 48 V
172 72 V
1275 1743 Dia
1962 1854 Dia
2650 1935 Dia
3338 2102 Dia
3681 2199 Dia
4025 2382 Dia
4197 2266 Dia
4369 2707 Dia
4455 2607 Dia
4541 2707 Dia
4627 2768 Dia
4712 2781 Dia
4798 3339 Dia
4884 3368 Dia
4970 3569 Dia
5056 3738 Dia
5228 3804 Dia
5400 3948 Dia
5572 3985 Dia
5744 4049 Dia
5916 4097 Dia
6088 4169 Dia
1975 3141 Dia
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
