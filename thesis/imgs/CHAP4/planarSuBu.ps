%!PS-Adobe-2.0
%%Title: temp.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Jan 30 16:06:27 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1050 900 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 900 M
[ [(Helvetica) 300.0 0.0 true true (0.0)]
] -100.0 MRshow
1050 1845 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 1845 M
[ [(Helvetica) 300.0 0.0 true true (0.5)]
] -100.0 MRshow
1050 2790 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 2790 M
[ [(Helvetica) 300.0 0.0 true true (1.0)]
] -100.0 MRshow
1050 3735 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 3735 M
[ [(Helvetica) 300.0 0.0 true true (1.5)]
] -100.0 MRshow
1050 4680 M
63 0 V
5577 0 R
-63 0 V
 stroke
870 4680 M
[ [(Helvetica) 300.0 0.0 true true (2.0)]
] -100.0 MRshow
1050 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
1050 600 M
[ [(Helvetica) 300.0 0.0 true true (-6.0)]
] -100.0 MCshow
1990 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
1990 600 M
[ [(Helvetica) 300.0 0.0 true true (-4.0)]
] -100.0 MCshow
2930 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
2930 600 M
[ [(Helvetica) 300.0 0.0 true true (-2.0)]
] -100.0 MCshow
3870 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
3870 600 M
[ [(Helvetica) 300.0 0.0 true true (0.0)]
] -100.0 MCshow
4810 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
4810 600 M
[ [(Helvetica) 300.0 0.0 true true (2.0)]
] -100.0 MCshow
5750 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
5750 600 M
[ [(Helvetica) 300.0 0.0 true true (4.0)]
] -100.0 MCshow
6690 900 M
0 63 V
0 3717 R
0 -63 V
 stroke
6690 600 M
[ [(Helvetica) 300.0 0.0 true true (6.0)]
] -100.0 MCshow
1.000 UL
LTb
1050 900 M
5640 0 V
0 3780 V
-5640 0 V
0 -3780 V
 stroke
3870 150 M
[ [(Helvetica) 300.0 0.0 true true (z)]
] -100.0 MCshow
110 2790 M
[ [(Symbol) 300.0 0.0 true true (r)]
[(Helvetica) 240.0 150.0 true true (*)]
[(Helvetica) 240.0 -90.0 true true (l)]
] -100.0 MLshow
1144 4113 M
[ [(Helvetica) 300.0 0.0 true true (Sb)]
] -100.0 MLshow
3635 4113 M
[ [(Helvetica) 300.0 0.0 true true (Bu)]
] -100.0 MLshow
6314 4113 M
[ [(Helvetica) 300.0 0.0 true true (St)]
] -100.0 MLshow
1.000 UL
LT6
1529 900 M
0 3780 V
1.000 UL
LT6
6211 900 M
0 3780 V
1.000 UP
1.500 UL
LT2
1078 3622 M
57 -1563 V
56 -741 V
56 -185 V
57 -53 V
56 5 V
57 128 V
56 556 V
56 424 V
57 -306 V
56 -360 V
57 -206 V
56 -80 V
56 12 V
57 118 V
56 232 V
57 146 V
56 -54 V
56 -132 V
57 -116 V
56 -52 V
57 0 V
56 62 V
56 76 V
57 41 V
56 10 V
57 -46 V
56 -41 V
56 -22 V
57 -20 V
56 38 V
57 10 V
56 21 V
56 18 V
57 -24 V
56 -20 V
57 -5 V
56 10 V
56 16 V
57 -16 V
56 -2 V
57 -13 V
56 31 V
56 -11 V
57 6 V
56 -12 V
57 11 V
56 -21 V
56 6 V
57 11 V
56 -7 V
57 -1 V
56 -1 V
56 18 V
57 -6 V
56 -3 V
57 -13 V
56 13 V
56 -8 V
57 -1 V
56 7 V
57 -18 V
56 -21 V
56 43 V
57 3 V
56 18 V
57 4 V
56 -12 V
56 -18 V
57 -14 V
56 -35 V
57 8 V
56 38 V
56 25 V
57 57 V
56 -22 V
57 -48 V
56 -53 V
56 -36 V
57 -21 V
56 66 V
57 70 V
56 154 V
56 30 V
57 -133 V
56 -226 V
57 -110 V
56 -13 V
56 106 V
57 192 V
56 357 V
57 275 V
56 -422 V
56 -529 V
57 -133 V
56 -16 V
57 49 V
56 195 V
56 757 V
57 1553 V
1078 3622 Pls
1135 2059 Pls
1191 1318 Pls
1247 1133 Pls
1304 1080 Pls
1360 1085 Pls
1417 1213 Pls
1473 1769 Pls
1529 2193 Pls
1586 1887 Pls
1642 1527 Pls
1699 1321 Pls
1755 1241 Pls
1811 1253 Pls
1868 1371 Pls
1924 1603 Pls
1981 1749 Pls
2037 1695 Pls
2093 1563 Pls
2150 1447 Pls
2206 1395 Pls
2263 1395 Pls
2319 1457 Pls
2375 1533 Pls
2432 1574 Pls
2488 1584 Pls
2545 1538 Pls
2601 1497 Pls
2657 1475 Pls
2714 1455 Pls
2770 1493 Pls
2827 1503 Pls
2883 1524 Pls
2939 1542 Pls
2996 1518 Pls
3052 1498 Pls
3109 1493 Pls
3165 1503 Pls
3221 1519 Pls
3278 1503 Pls
3334 1501 Pls
3391 1488 Pls
3447 1519 Pls
3503 1508 Pls
3560 1514 Pls
3616 1502 Pls
3673 1513 Pls
3729 1492 Pls
3785 1498 Pls
3842 1509 Pls
3898 1502 Pls
3955 1501 Pls
4011 1500 Pls
4067 1518 Pls
4124 1512 Pls
4180 1509 Pls
4237 1496 Pls
4293 1509 Pls
4349 1501 Pls
4406 1500 Pls
4462 1507 Pls
4519 1489 Pls
4575 1468 Pls
4631 1511 Pls
4688 1514 Pls
4744 1532 Pls
4801 1536 Pls
4857 1524 Pls
4913 1506 Pls
4970 1492 Pls
5026 1457 Pls
5083 1465 Pls
5139 1503 Pls
5195 1528 Pls
5252 1585 Pls
5308 1563 Pls
5365 1515 Pls
5421 1462 Pls
5477 1426 Pls
5534 1405 Pls
5590 1471 Pls
5647 1541 Pls
5703 1695 Pls
5759 1725 Pls
5816 1592 Pls
5872 1366 Pls
5929 1256 Pls
5985 1243 Pls
6041 1349 Pls
6098 1541 Pls
6154 1898 Pls
6211 2173 Pls
6267 1751 Pls
6323 1222 Pls
6380 1089 Pls
6436 1073 Pls
6493 1122 Pls
6549 1317 Pls
6605 2074 Pls
6662 3627 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
