%!PS-Adobe-2.0
%%Title: P2WaBu-rho_k3.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Jun 14 10:57:58 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -83 def
/dl {25 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
1275 750 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 750 M
[ [(Helvetica) 250.0 0.0 true true (0.00)]
] -83.3 MRshow
1275 1748 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 1748 M
[ [(Helvetica) 250.0 0.0 true true (0.25)]
] -83.3 MRshow
1275 2745 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 2745 M
[ [(Helvetica) 250.0 0.0 true true (0.50)]
] -83.3 MRshow
1275 3743 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 3743 M
[ [(Helvetica) 250.0 0.0 true true (0.75)]
] -83.3 MRshow
1275 4740 M
63 0 V
5437 0 R
-63 0 V
 stroke
1125 4740 M
[ [(Helvetica) 250.0 0.0 true true (1.00)]
] -83.3 MRshow
1275 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
1275 500 M
[ [(Helvetica) 250.0 0.0 true true (0.20)]
] -83.3 MCshow
2650 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
2650 500 M
[ [(Helvetica) 250.0 0.0 true true (0.24)]
] -83.3 MCshow
4025 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
4025 500 M
[ [(Helvetica) 250.0 0.0 true true (0.28)]
] -83.3 MCshow
5400 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
5400 500 M
[ [(Helvetica) 250.0 0.0 true true (0.32)]
] -83.3 MCshow
6775 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
6775 500 M
[ [(Helvetica) 250.0 0.0 true true (0.36)]
] -83.3 MCshow
1.000 UL
LTb
1275 750 M
5500 0 V
0 3990 V
-5500 0 V
0 -3990 V
 stroke
250 2745 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true (  )]
] -83.3 MCshow
grestore
4025 125 M
[ [(Symbol) 250.0 0.0 true true (r)]
[(Helvetica) 200.0 125.0 true true (*)]
] -108.3 MCshow
175 2905 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true (|)]
] -83.3 MCshow
grestore
347 2745 M
[ [(Helvetica) 250.0 0.0 true true (P)]
[(Helvetica) 200.0 125.0 true true (Bu)]
] -108.3 MCshow
347 2745 M
[ [(Helvetica) 250.0 0.0 true true ( )]
[(Helvetica) 200.0 -75.0 true true (2)]
] -58.3 MCshow
2134 4461 M
[ [(Helvetica) 250.0 0.0 true true (k)]
[(Helvetica) 200.0 -75.0 true true (S)]
[(Helvetica) 250.0 0.0 true true (/k = )]
] -58.3 MLshow
1.000 UP
2.000 UL
LT0
3056 4141 M
[ [(Helvetica) 250.0 0.0 true true (0.00)]
] -83.3 MRshow
1643 4141 M
663 0 V
1275 1132 M
687 3 V
688 15 V
688 16 V
343 2 V
344 15 V
344 16 V
86 -3 V
86 10 V
86 3 V
85 0 V
86 16 V
86 22 V
86 -17 V
86 19 V
172 11 V
172 32 V
172 20 V
172 40 V
172 85 V
172 98 V
1275 1132 TriU
1962 1135 TriU
2650 1150 TriU
3338 1166 TriU
3681 1168 TriU
4025 1183 TriU
4369 1199 TriU
4455 1196 TriU
4541 1206 TriU
4627 1209 TriU
4712 1209 TriU
4798 1225 TriU
4884 1247 TriU
4970 1230 TriU
5056 1249 TriU
5228 1260 TriU
5400 1292 TriU
5572 1312 TriU
5744 1352 TriU
5916 1437 TriU
6088 1535 TriU
1975 4141 TriU
1.000 UP
2.000 UL
LT1
3056 3891 M
[ [(Helvetica) 250.0 0.0 true true (0.40)]
] -83.3 MRshow
1643 3891 M
663 0 V
1275 1115 M
687 10 V
688 71 V
688 122 V
343 41 V
344 -208 V
172 15 V
172 -4 V
86 10 V
86 6 V
86 26 V
85 17 V
86 15 V
86 -4 V
86 28 V
86 82 V
172 90 V
172 -19 V
172 592 V
172 556 V
172 287 V
172 178 V
1275 1115 Circle
1962 1125 Circle
2650 1196 Circle
3338 1318 Circle
3681 1359 Circle
4025 1151 Circle
4197 1166 Circle
4369 1162 Circle
4455 1172 Circle
4541 1178 Circle
4627 1204 Circle
4712 1221 Circle
4798 1236 Circle
4884 1232 Circle
4970 1260 Circle
5056 1342 Circle
5228 1432 Circle
5400 1413 Circle
5572 2005 Circle
5744 2561 Circle
5916 2848 Circle
6088 3026 Circle
1975 3891 Circle
1.000 UP
2.000 UL
LT2
3056 3641 M
[ [(Helvetica) 250.0 0.0 true true (0.50)]
] -83.3 MRshow
1643 3641 M
663 0 V
1275 1121 M
687 24 V
688 10 V
688 -16 V
343 28 V
344 10 V
172 2 V
172 16 V
86 -18 V
86 13 V
86 15 V
85 -9 V
86 48 V
86 -27 V
86 3 V
86 12 V
172 133 V
172 -90 V
172 228 V
172 1353 V
172 29 V
172 455 V
1275 1121 Box
1962 1145 Box
2650 1155 Box
3338 1139 Box
3681 1167 Box
4025 1177 Box
4197 1179 Box
4369 1195 Box
4455 1177 Box
4541 1190 Box
4627 1205 Box
4712 1196 Box
4798 1244 Box
4884 1217 Box
4970 1220 Box
5056 1232 Box
5228 1365 Box
5400 1275 Box
5572 1503 Box
5744 2856 Box
5916 2885 Box
6088 3340 Box
1975 3641 Box
1.000 UP
2.000 UL
LT3
3056 3391 M
[ [(Helvetica) 250.0 0.0 true true (0.60)]
] -83.3 MRshow
1643 3391 M
663 0 V
1275 1119 M
687 13 V
688 -4 V
688 11 V
343 12 V
344 13 V
172 0 V
172 35 V
86 -31 V
86 26 V
86 3 V
85 8 V
86 30 V
86 3 V
86 41 V
86 134 V
172 208 V
172 579 V
172 781 V
172 260 V
1275 1119 TriD
1962 1132 TriD
2650 1128 TriD
3338 1139 TriD
3681 1151 TriD
4025 1164 TriD
4197 1164 TriD
4369 1199 TriD
4455 1168 TriD
4541 1194 TriD
4627 1197 TriD
4712 1205 TriD
4798 1235 TriD
4884 1238 TriD
4970 1279 TriD
5056 1413 TriD
5228 1621 TriD
5400 2200 TriD
5572 2981 TriD
5744 3241 TriD
1975 3391 TriD
1.000 UP
2.000 UL
LT6
3056 3141 M
[ [(Helvetica) 250.0 0.0 true true (1.00)]
] -83.3 MRshow
1643 3141 M
663 0 V
1275 1111 M
687 4 V
688 14 V
688 29 V
343 27 V
344 19 V
172 -1 V
172 37 V
86 -4 V
86 57 V
86 -5 V
85 48 V
86 210 V
86 50 V
86 223 V
86 -46 V
172 252 V
172 589 V
172 284 V
172 454 V
172 110 V
172 194 V
1275 1111 Dia
1962 1115 Dia
2650 1129 Dia
3338 1158 Dia
3681 1185 Dia
4025 1204 Dia
4197 1203 Dia
4369 1240 Dia
4455 1236 Dia
4541 1293 Dia
4627 1288 Dia
4712 1336 Dia
4798 1546 Dia
4884 1596 Dia
4970 1819 Dia
5056 1773 Dia
5228 2025 Dia
5400 2614 Dia
5572 2898 Dia
5744 3352 Dia
5916 3462 Dia
6088 3656 Dia
1975 3141 Dia
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
