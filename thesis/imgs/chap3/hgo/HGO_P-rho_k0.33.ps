%!PS-Adobe-2.0
%%Title: HGO_P-rho_k0.33.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Apr 16 09:58:46 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -83 def
/dl {30 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
975 1249 M
63 0 V
5737 0 R
-63 0 V
 stroke
825 1249 M
[ [(Helvetica) 250.0 0.0 true true (20)]
] -83.3 MRshow
975 2246 M
63 0 V
5737 0 R
-63 0 V
 stroke
825 2246 M
[ [(Helvetica) 250.0 0.0 true true (40)]
] -83.3 MRshow
975 3244 M
63 0 V
5737 0 R
-63 0 V
 stroke
825 3244 M
[ [(Helvetica) 250.0 0.0 true true (60)]
] -83.3 MRshow
975 4241 M
63 0 V
5737 0 R
-63 0 V
 stroke
825 4241 M
[ [(Helvetica) 250.0 0.0 true true (80)]
] -83.3 MRshow
975 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
975 500 M
[ [(Helvetica) 250.0 0.0 true true (2.0)]
] -83.3 MCshow
1804 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
1804 500 M
[ [(Helvetica) 250.0 0.0 true true (2.2)]
] -83.3 MCshow
2632 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
2632 500 M
[ [(Helvetica) 250.0 0.0 true true (2.4)]
] -83.3 MCshow
3461 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
3461 500 M
[ [(Helvetica) 250.0 0.0 true true (2.6)]
] -83.3 MCshow
4289 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
4289 500 M
[ [(Helvetica) 250.0 0.0 true true (2.8)]
] -83.3 MCshow
5118 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
5118 500 M
[ [(Helvetica) 250.0 0.0 true true (3.0)]
] -83.3 MCshow
5946 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
5946 500 M
[ [(Helvetica) 250.0 0.0 true true (3.2)]
] -83.3 MCshow
6775 750 M
0 63 V
0 3927 R
0 -63 V
 stroke
6775 500 M
[ [(Helvetica) 250.0 0.0 true true (3.4)]
] -83.3 MCshow
1.000 UL
LTb
975 750 M
5800 0 V
0 3990 V
-5800 0 V
975 750 L
 stroke
250 2745 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true (P)]
[(Helvetica) 200.0 125.0 true true (*)]
[(Helvetica) 250.0 0.0 true true (\()]
[(Symbol) 250.0 0.0 true true (r)]
[(Helvetica) 200.0 125.0 true true (*)]
[(Helvetica) 250.0 0.0 true true (\))]
] -108.3 MCshow
grestore
3875 125 M
[ [(Helvetica) 250.0 0.0 true true (  )]
] -83.3 MCshow
3751 251 M
[ [(Symbol) 250.0 0.0 true true (r)]
[(Helvetica) 200.0 125.0 true true (*)]
] -108.3 MLshow
1.500 UP
2.000 UL
LT0
1358 1199 M
509 199 V
258 100 V
224 100 V
258 100 V
90 25 V
118 25 V
-6 12 V
99 12 V
34 13 V
43 12 V
19 25 V
126 25 V
143 50 V
103 50 V
122 50 V
90 50 V
109 50 V
177 99 V
171 100 V
144 100 V
317 199 V
173 150 V
183 150 V
162 149 V
170 150 V
148 150 V
125 149 V
140 150 V
105 149 V
139 150 V
115 150 V
95 149 V
1358 1199 TriU
1867 1398 TriU
2125 1498 TriU
2349 1598 TriU
2607 1698 TriU
2697 1723 TriU
2815 1748 TriU
2809 1760 TriU
2908 1772 TriU
2942 1785 TriU
2985 1797 TriU
3004 1822 TriU
3130 1847 TriU
3273 1897 TriU
3376 1947 TriU
3498 1997 TriU
3588 2047 TriU
3697 2097 TriU
3874 2196 TriU
4045 2296 TriU
4189 2396 TriU
4506 2595 TriU
4679 2745 TriU
4862 2895 TriU
5024 3044 TriU
5194 3194 TriU
5342 3344 TriU
5467 3493 TriU
5607 3643 TriU
5712 3792 TriU
5851 3942 TriU
5966 4092 TriU
6061 4241 TriU
1.000 UL
LTb
1445 2667 M
63 0 V
2387 0 R
-63 0 V
 stroke
1295 2667 M
[ [(Helvetica) 250.0 0.0 true true (20)]
] -83.3 MRshow
1445 3527 M
63 0 V
2387 0 R
-63 0 V
 stroke
1295 3527 M
[ [(Helvetica) 250.0 0.0 true true (30)]
] -83.3 MRshow
1445 4387 M
63 0 V
2387 0 R
-63 0 V
 stroke
1295 4387 M
[ [(Helvetica) 250.0 0.0 true true (40)]
] -83.3 MRshow
1445 2667 M
0 63 V
0 1657 R
0 -63 V
 stroke
1445 2417 M
[ [(Helvetica) 250.0 0.0 true true (2.3)]
] -83.3 MCshow
2058 2667 M
0 63 V
0 1657 R
0 -63 V
 stroke
2058 2417 M
[ [(Helvetica) 250.0 0.0 true true (2.4)]
] -83.3 MCshow
2670 2667 M
0 63 V
0 1657 R
0 -63 V
 stroke
2670 2417 M
[ [(Helvetica) 250.0 0.0 true true (2.5)]
] -83.3 MCshow
3283 2667 M
0 63 V
0 1657 R
0 -63 V
 stroke
3283 2417 M
[ [(Helvetica) 250.0 0.0 true true (2.6)]
] -83.3 MCshow
3895 2667 M
0 63 V
0 1657 R
0 -63 V
 stroke
3895 2417 M
[ [(Helvetica) 250.0 0.0 true true (2.7)]
] -83.3 MCshow
1.000 UL
LTb
1445 2667 M
2450 0 V
0 1720 V
-2450 0 V
0 -1720 V
1.500 UP
2.000 UL
LT0
1445 3168 M
194 101 V
381 172 V
134 43 V
173 43 V
-7 22 V
146 21 V
49 22 V
65 21 V
27 43 V
187 43 V
211 86 V
153 86 V
179 86 V
133 86 V
163 86 V
261 172 V
1 1 V
1639 3269 TriU
2020 3441 TriU
2154 3484 TriU
2327 3527 TriU
2320 3549 TriU
2466 3570 TriU
2515 3592 TriU
2580 3613 TriU
2607 3656 TriU
2794 3699 TriU
3005 3785 TriU
3158 3871 TriU
3337 3957 TriU
3470 4043 TriU
3633 4129 TriU
3894 4301 TriU
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
